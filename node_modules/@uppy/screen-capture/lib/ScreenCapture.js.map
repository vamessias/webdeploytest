{"version":3,"names":["h","UIPlugin","getFileTypeExtension","ScreenRecIcon","RecorderScreen","packageJson","locale","isScreenRecordingSupported","_navigator$mediaDevic","window","MediaRecorder","navigator","mediaDevices","getDisplayMedia","getMediaDevices","defaultOptions","displayMediaConstraints","video","width","height","frameRate","ideal","max","cursor","displaySurface","userMediaConstraints","audio","preferredVideoMimeType","ScreenCapture","constructor","uppy","opts","videoStream","audioStream","userDenied","recorder","outputStream","recordingChunks","protocol","location","id","type","icon","defaultLocale","i18nInit","title","i18n","install","bind","setPluginState","render","start","stop","startRecording","stopRecording","submit","streamInterrupted","streamInactivated","captureActive","capturedMediaFile","log","streamActive","audioStreamActive","target","mount","undefined","uninstall","unmount","Promise","reject","Error","selectAudioStreamSource","selectVideoStreamSource","then","res","parent","hideAllPanels","resolve","addEventListener","catch","err","screenRecError","setTimeout","getUserMedia","name","info","options","isTypeSupported","mimeType","tracks","getVideoTracks","push","getAudioTracks","MediaStream","event","data","recording","recordedVideo","getPluginState","stopped","getVideo","file","URL","createObjectURL","error","addFile","isRestriction","forEach","track","fileExtension","Date","now","blob","Blob","source","recorderState","_extends","onStartRecording","onStopRecording","onStop","onSubmit","stream","VERSION","version"],"sources":["ScreenCapture.tsx"],"sourcesContent":["import { h, type ComponentChild } from 'preact'\nimport { UIPlugin, Uppy, type UIPluginOptions } from '@uppy/core'\nimport getFileTypeExtension from '@uppy/utils/lib/getFileTypeExtension'\nimport type { DefinePluginOpts } from '@uppy/core/lib/BasePlugin.js'\nimport type { Body, Meta } from '@uppy/utils/lib/UppyFile'\nimport ScreenRecIcon from './ScreenRecIcon.tsx'\nimport RecorderScreen from './RecorderScreen.tsx'\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\nimport locale from './locale.ts'\n\n// Check if screen capturing is supported.\n// mediaDevices is supprted on mobile Safari, getDisplayMedia is not\nfunction isScreenRecordingSupported() {\n  return window.MediaRecorder && navigator.mediaDevices?.getDisplayMedia // eslint-disable-line compat/compat\n}\n\n// Adapted from: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nfunction getMediaDevices() {\n  return window.MediaRecorder && navigator.mediaDevices // eslint-disable-line compat/compat\n}\n\nexport interface ScreenCaptureOptions extends UIPluginOptions {\n  displayMediaConstraints?: MediaStreamConstraints\n  userMediaConstraints?: MediaStreamConstraints\n  preferredVideoMimeType?: string\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints\nconst defaultOptions = {\n  // https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#Properties_of_shared_screen_tracks\n  displayMediaConstraints: {\n    video: {\n      width: 1280,\n      height: 720,\n      frameRate: {\n        ideal: 3,\n        max: 5,\n      },\n      cursor: 'motion',\n      displaySurface: 'monitor',\n    },\n  },\n  // https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints/audio\n  userMediaConstraints: {\n    audio: true,\n  },\n  preferredVideoMimeType: 'video/webm',\n}\n\ntype Opts = DefinePluginOpts<ScreenCaptureOptions, keyof typeof defaultOptions>\n\nexport type ScreenCaptureState = {\n  streamActive: boolean\n  audioStreamActive: boolean\n  recording: boolean\n  recordedVideo: string | null\n  screenRecError: string | null\n}\n\nexport default class ScreenCapture<\n  M extends Meta,\n  B extends Body,\n> extends UIPlugin<Opts, M, B, ScreenCaptureState> {\n  static VERSION = packageJson.version\n\n  mediaDevices: MediaDevices\n\n  protocol: string\n\n  icon: ComponentChild\n\n  streamInterrupted: () => void\n\n  captureActive: boolean\n\n  capturedMediaFile: null | {\n    source: string\n    name: string\n    data: Blob\n    type: string\n  }\n\n  videoStream: null | MediaStream = null\n\n  audioStream: null | MediaStream = null\n\n  userDenied: boolean = false\n\n  recorder: null | MediaRecorder = null\n\n  outputStream: null | MediaStream = null\n\n  recordingChunks: Blob[] | null = null\n\n  constructor(uppy: Uppy<M, B>, opts?: ScreenCaptureOptions) {\n    super(uppy, { ...defaultOptions, ...opts })\n    this.mediaDevices = getMediaDevices()\n    // eslint-disable-next-line no-restricted-globals\n    this.protocol = location.protocol === 'https:' ? 'https' : 'http'\n    this.id = this.opts.id || 'ScreenCapture'\n    this.type = 'acquirer'\n    this.icon = ScreenRecIcon\n\n    this.defaultLocale = locale\n\n    this.i18nInit()\n    this.title = this.i18n('pluginNameScreenCapture')\n\n    // uppy plugin class related\n    this.install = this.install.bind(this)\n    this.setPluginState = this.setPluginState.bind(this)\n    this.render = this.render.bind(this)\n\n    // screen capturer related\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.startRecording = this.startRecording.bind(this)\n    this.stopRecording = this.stopRecording.bind(this)\n    this.submit = this.submit.bind(this)\n    this.streamInterrupted = this.streamInactivated.bind(this)\n\n    // initialize\n    this.captureActive = false\n    this.capturedMediaFile = null\n  }\n\n  install(): null | undefined {\n    if (!isScreenRecordingSupported()) {\n      this.uppy.log('Screen recorder access is not supported', 'warning')\n      return null\n    }\n\n    this.setPluginState({\n      streamActive: false,\n      audioStreamActive: false,\n    })\n\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n\n    return undefined\n  }\n\n  uninstall(): void {\n    if (this.videoStream) {\n      this.stop()\n    }\n\n    this.unmount()\n  }\n\n  start(): Promise<void> {\n    if (!this.mediaDevices) {\n      return Promise.reject(new Error('Screen recorder access not supported'))\n    }\n\n    this.captureActive = true\n\n    this.selectAudioStreamSource()\n\n    return this.selectVideoStreamSource().then((res) => {\n      // something happened in start -> return\n      if (res === false) {\n        // Close the Dashboard panel if plugin is installed\n        // into Dashboard (could be other parent UI plugin)\n        // @ts-expect-error we can't know Dashboard types here\n        if (this.parent && this.parent.hideAllPanels) {\n          // @ts-expect-error we can't know Dashboard types here\n          this.parent.hideAllPanels()\n          this.captureActive = false\n        }\n      }\n    })\n  }\n\n  selectVideoStreamSource(): Promise<MediaStream | false> {\n    // if active stream available, return it\n    if (this.videoStream) {\n      return new Promise((resolve) => resolve(this.videoStream!))\n    }\n\n    // ask user to select source to record and get mediastream from that\n    // eslint-disable-next-line compat/compat\n    return this.mediaDevices\n      .getDisplayMedia(this.opts.displayMediaConstraints)\n      .then((videoStream) => {\n        this.videoStream = videoStream\n\n        // add event listener to stop recording if stream is interrupted\n        this.videoStream.addEventListener('inactive', () => {\n          this.streamInactivated()\n        })\n\n        this.setPluginState({\n          streamActive: true,\n        })\n\n        return videoStream\n      })\n      .catch((err) => {\n        this.setPluginState({\n          screenRecError: err,\n        })\n\n        this.userDenied = true\n\n        setTimeout(() => {\n          this.userDenied = false\n        }, 1000)\n\n        return false\n      })\n  }\n\n  selectAudioStreamSource(): Promise<MediaStream | false> {\n    // if active stream available, return it\n    if (this.audioStream) {\n      return new Promise((resolve) => resolve(this.audioStream!))\n    }\n\n    // ask user to select source to record and get mediastream from that\n    // eslint-disable-next-line compat/compat\n    return this.mediaDevices\n      .getUserMedia(this.opts.userMediaConstraints)\n      .then((audioStream) => {\n        this.audioStream = audioStream\n\n        this.setPluginState({\n          audioStreamActive: true,\n        })\n\n        return audioStream\n      })\n      .catch((err) => {\n        if (err.name === 'NotAllowedError') {\n          this.uppy.info(this.i18n('micDisabled'), 'error', 5000)\n          this.uppy.log(this.i18n('micDisabled'), 'warning')\n        }\n        return false\n      })\n  }\n\n  startRecording(): void {\n    const options: { mimeType?: string } = {}\n    this.capturedMediaFile = null\n    this.recordingChunks = []\n    const { preferredVideoMimeType } = this.opts\n\n    this.selectVideoStreamSource()\n      .then((videoStream) => {\n        if (videoStream === false) {\n          throw new Error('No video stream available')\n        }\n        // Attempt to use the passed preferredVideoMimeType (if any) during recording.\n        // If the browser doesn't support it, we'll fall back to the browser default instead\n        if (\n          preferredVideoMimeType &&\n          MediaRecorder.isTypeSupported(preferredVideoMimeType) &&\n          getFileTypeExtension(preferredVideoMimeType)\n        ) {\n          options.mimeType = preferredVideoMimeType\n        }\n\n        // prepare tracks\n        const tracks = [videoStream.getVideoTracks()[0]]\n\n        // merge audio if exits\n        if (this.audioStream) {\n          tracks.push(this.audioStream.getAudioTracks()[0])\n        }\n\n        // create new stream from video and audio\n        // eslint-disable-next-line compat/compat\n        this.outputStream = new MediaStream(tracks)\n\n        // initialize mediarecorder\n        // eslint-disable-next-line compat/compat\n        this.recorder = new MediaRecorder(this.outputStream, options)\n\n        // push data to buffer when data available\n        this.recorder.addEventListener('dataavailable', (event) => {\n          this.recordingChunks!.push(event.data)\n        })\n\n        // start recording\n        this.recorder.start()\n\n        // set plugin state to recording\n        this.setPluginState({\n          recording: true,\n        })\n      })\n      .catch((err) => {\n        this.uppy.log(err, 'error')\n      })\n  }\n\n  streamInactivated(): void {\n    // get screen recorder state\n    const { recordedVideo, recording } = { ...this.getPluginState() }\n\n    if (!recordedVideo && !recording) {\n      // Close the Dashboard panel if plugin is installed\n      // into Dashboard (could be other parent UI plugin)\n      // @ts-expect-error we can't know Dashboard types here\n      if (this.parent && this.parent.hideAllPanels) {\n        // @ts-expect-error we can't know Dashboard types here\n        this.parent.hideAllPanels()\n      }\n    } else if (recording) {\n      // stop recorder if it is active\n      this.uppy.log('Capture stream inactive — stop recording')\n      this.stopRecording()\n    }\n\n    this.videoStream = null\n    this.audioStream = null\n\n    this.setPluginState({\n      streamActive: false,\n      audioStreamActive: false,\n    })\n  }\n\n  stopRecording(): Promise<void> {\n    const stopped = new Promise<void>((resolve) => {\n      this.recorder!.addEventListener('stop', () => {\n        resolve()\n      })\n\n      this.recorder!.stop()\n    })\n\n    return stopped\n      .then(() => {\n        // recording stopped\n        this.setPluginState({\n          recording: false,\n        })\n        // get video file after recorder stopped\n        return this.getVideo()\n      })\n      .then((file) => {\n        // store media file\n        this.capturedMediaFile = file\n\n        // create object url for capture result preview\n        this.setPluginState({\n          // eslint-disable-next-line compat/compat\n          recordedVideo: URL.createObjectURL(file.data),\n        })\n      })\n      .then(\n        () => {\n          this.recordingChunks = null\n          this.recorder = null\n        },\n        (error) => {\n          this.recordingChunks = null\n          this.recorder = null\n          throw error\n        },\n      )\n  }\n\n  submit(): void {\n    try {\n      // add recorded file to uppy\n      if (this.capturedMediaFile) {\n        this.uppy.addFile(this.capturedMediaFile)\n      }\n    } catch (err) {\n      // Logging the error, exept restrictions, which is handled in Core\n      if (!err.isRestriction) {\n        this.uppy.log(err, 'warning')\n      }\n    }\n  }\n\n  stop(): void {\n    // flush video stream\n    if (this.videoStream) {\n      this.videoStream.getVideoTracks().forEach((track) => {\n        track.stop()\n      })\n      this.videoStream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      this.videoStream = null\n    }\n\n    // flush audio stream\n    if (this.audioStream) {\n      this.audioStream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      this.audioStream.getVideoTracks().forEach((track) => {\n        track.stop()\n      })\n      this.audioStream = null\n    }\n\n    // flush output stream\n    if (this.outputStream) {\n      this.outputStream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      this.outputStream.getVideoTracks().forEach((track) => {\n        track.stop()\n      })\n      this.outputStream = null\n    }\n\n    // remove preview video\n    this.setPluginState({\n      recordedVideo: null,\n    })\n\n    this.captureActive = false\n  }\n\n  getVideo(): Promise<{\n    source: string\n    name: string\n    data: Blob\n    type: string\n  }> {\n    const mimeType = this.recordingChunks![0].type\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(\n        new Error(\n          `Could not retrieve recording: Unsupported media type \"${mimeType}\"`,\n        ),\n      )\n    }\n\n    const name = `screencap-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.recordingChunks!, { type: mimeType })\n    const file = {\n      source: this.id,\n      name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType,\n    }\n\n    return Promise.resolve(file)\n  }\n\n  render(): ComponentChild {\n    // get screen recorder state\n    const recorderState = this.getPluginState()\n\n    if (\n      !recorderState.streamActive &&\n      !this.captureActive &&\n      !this.userDenied\n    ) {\n      this.start()\n    }\n\n    return (\n      <RecorderScreen<M, B>\n        {...recorderState} // eslint-disable-line react/jsx-props-no-spreading\n        onStartRecording={this.startRecording}\n        onStopRecording={this.stopRecording}\n        onStop={this.stop}\n        onSubmit={this.submit}\n        i18n={this.i18n}\n        stream={this.videoStream}\n      />\n    )\n  }\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"names":["BasePlugin","Dropbox","GoogleDrive","GooglePhotos","Instagram","Facebook","OneDrive","Box","Unsplash","Url","Zoom","packageJson","availablePlugins","__proto__","defaultOptions","sources","Object","keys","_installedPlugins","_classPrivateFieldLooseKey","RemoteSources","constructor","uppy","opts","defineProperty","writable","value","Set","id","type","companionUrl","Error","setOptions","newOpts","uninstall","install","forEach","pluginId","_this$opts$companionK","rest","optsForRemoteSourcePlugin","companionKeysParams","plugin","pluginNames","formatter","Intl","ListFormat","style","format","use","_classPrivateFieldLooseBase","add","getPlugin","removePlugin","clear","VERSION","version"],"sources":["index.ts"],"sourcesContent":["import { BasePlugin, Uppy, type UnknownProviderPlugin } from '@uppy/core'\nimport Dropbox from '@uppy/dropbox'\nimport GoogleDrive from '@uppy/google-drive'\nimport GooglePhotos from '@uppy/google-photos'\nimport Instagram from '@uppy/instagram'\nimport Facebook from '@uppy/facebook'\nimport OneDrive from '@uppy/onedrive'\nimport Box from '@uppy/box'\nimport Unsplash from '@uppy/unsplash'\nimport Url from '@uppy/url'\nimport Zoom from '@uppy/zoom'\n\nimport type { DefinePluginOpts } from '@uppy/core/lib/BasePlugin.js'\nimport type { Body, Meta } from '@uppy/utils/lib/UppyFile'\nimport type { CompanionPluginOptions } from '@uppy/companion-client'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\n\nconst availablePlugins = {\n  // Using a null-prototype object to avoid prototype pollution.\n  __proto__: null,\n  Box,\n  Dropbox,\n  Facebook,\n  GoogleDrive,\n  GooglePhotos,\n  Instagram,\n  OneDrive,\n  Unsplash,\n  Url,\n  Zoom,\n}\n\ntype AvailablePluginsKeys =\n  | 'Box'\n  | 'Dropbox'\n  | 'Facebook'\n  | 'GoogleDrive'\n  | 'GooglePhotos'\n  | 'Instagram'\n  | 'OneDrive'\n  | 'Unsplash'\n  | 'Url'\n  | 'Zoom'\n\ntype NestedCompanionKeysParams = {\n  [key in AvailablePluginsKeys]?: CompanionPluginOptions['companionKeysParams']\n}\n\nexport interface RemoteSourcesOptions\n  extends Omit<CompanionPluginOptions, 'companionKeysParams'> {\n  sources?: Array<AvailablePluginsKeys>\n  // Individual remote source plugins set the `key` and `credentialsName`\n  // in `companionKeysParams` but because this is a preset we need to change\n  // this to a record of plugin IDs to their respective `companionKeysParams`.\n  companionKeysParams?: NestedCompanionKeysParams\n}\n\nconst defaultOptions = {\n  sources: Object.keys(availablePlugins) as Array<AvailablePluginsKeys>,\n} satisfies Partial<RemoteSourcesOptions>\n\ntype Opts = DefinePluginOpts<RemoteSourcesOptions, keyof typeof defaultOptions>\n\nexport default class RemoteSources<\n  M extends Meta,\n  B extends Body,\n> extends BasePlugin<Opts, M, B> {\n  static VERSION = packageJson.version\n\n  #installedPlugins: Set<UnknownProviderPlugin<M, B>> = new Set()\n\n  constructor(uppy: Uppy<M, B>, opts: RemoteSourcesOptions) {\n    super(uppy, { ...defaultOptions, ...opts })\n    this.id = this.opts.id || 'RemoteSources'\n    this.type = 'preset'\n\n    if (this.opts.companionUrl == null) {\n      throw new Error(\n        'Please specify companionUrl for RemoteSources to work, see https://uppy.io/docs/remote-sources#companionUrl',\n      )\n    }\n  }\n\n  setOptions(newOpts: Partial<Opts>): void {\n    this.uninstall()\n    super.setOptions(newOpts)\n    this.install()\n  }\n\n  install(): void {\n    this.opts.sources.forEach((pluginId) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { sources, ...rest } = this.opts\n      const optsForRemoteSourcePlugin: CompanionPluginOptions = {\n        ...rest,\n        companionKeysParams: this.opts.companionKeysParams?.[pluginId],\n      }\n      const plugin = availablePlugins[pluginId]\n      if (plugin == null) {\n        const pluginNames = Object.keys(availablePlugins)\n        const formatter = new Intl.ListFormat('en', {\n          style: 'long',\n          type: 'disjunction',\n        })\n        throw new Error(\n          `Invalid plugin: \"${pluginId}\" is not one of: ${formatter.format(pluginNames)}.`,\n        )\n      }\n      this.uppy.use(plugin, optsForRemoteSourcePlugin)\n      // `plugin` is a class, but we want to track the instance object\n      // so we have to do `getPlugin` here.\n      this.#installedPlugins.add(\n        this.uppy.getPlugin(pluginId) as UnknownProviderPlugin<M, B>,\n      )\n    })\n  }\n\n  uninstall(): void {\n    for (const plugin of this.#installedPlugins) {\n      this.uppy.removePlugin(plugin)\n    }\n    this.#installedPlugins.clear()\n  }\n}\n"],"mappings":"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","ignoreList":[]}
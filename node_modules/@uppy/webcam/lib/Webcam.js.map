{"version":3,"names":["h","UIPlugin","getFileTypeExtension","mimeTypes","isMobile","canvasToBlob","supportsMediaRecorder","CameraIcon","CameraScreen","PermissionsScreen","packageJson","locale","toMimeType","fileType","slice","isVideoMimeType","mimeType","test","isImageMimeType","getMediaDevices","navigator","mediaDevices","isModeAvailable","modes","mode","includes","defaultOptions","onBeforeSnapshot","Promise","resolve","countdown","mirror","showVideoSourceDropdown","preferredImageMimeType","preferredVideoMimeType","showRecordingLength","mobileNativeCamera","tablet","_enableMirror","_classPrivateFieldLooseKey","Webcam","constructor","uppy","opts","Object","defineProperty","writable","value","stream","recorder","recordingChunks","captureInProgress","supportsUserMedia","protocol","location","match","id","type","capturedMediaFile","icon","focusable","width","height","viewBox","d","fill","fillRule","defaultLocale","i18nInit","title","i18n","_classPrivateFieldLooseBase","install","bind","setPluginState","render","start","stop","takeSnapshot","startRecording","stopRecording","discardRecordedVideo","submit","oneTwoThreeSmile","focus","changeVideoSource","webcamActive","hasCamera","cameraReady","cameraError","recordingLengthSeconds","videoSources","currentDeviceId","setOptions","newOpts","videoConstraints","hasCameraCheck","enumerateDevices","then","devices","some","device","kind","isAudioOnly","length","getConstraints","deviceId","acceptsAudio","indexOf","acceptsVideo","audio","video","options","_options","reject","Error","constraints","getUserMedia","tracks","getAudioTracks","getVideoTracks","getSettings","forEach","track","updateVideoSources","catch","err","info","message","getMediaRecorderOptions","MediaRecorder","isTypeSupported","restrictions","preferredVideoMimeTypes","allowedFileTypes","map","filter","filterSupportedTypes","candidateType","acceptableMimeTypes","stoppingBecauseOfMaxSize","addEventListener","event","push","data","maxFileSize","totalSize","reduce","acc","chunk","size","averageChunkSize","expectedEndChunkSize","maxSize","Math","max","recordingLengthTimer","setInterval","currentRecordingLength","getPluginState","isRecording","stopped","clearInterval","getVideo","file","recordedVideo","URL","createObjectURL","isRestriction","log","error","addFile","audioTracks","videoTracks","concat","once","getVideoElement","el","querySelector","count","countDown","setTimeout","getImage","tagFile","videoWidth","videoHeight","canvas","document","createElement","ctx","getContext","drawImage","preferredImageMimeTypes","ext","name","Date","now","blob","source","Blob","find","_blob$type","fileExtension","webcamState","_extends","onChangeVideoSource","onSnapshot","onStartRecording","onStopRecording","onDiscardRecordedVideo","onSubmit","onFocus","onStop","supportsRecording","recording","src","target","_this$getTargetPlugin","getTargetPlugin","showNativeVideoCameraButton","showNativePhotoCameraButton","nativeCameraFacingMode","facingMode","mount","ondevicechange","restartStream","videoSource","uninstall","unmount","onUnmount","VERSION","version"],"sources":["Webcam.tsx"],"sourcesContent":["import { h, type ComponentChild } from 'preact'\n\nimport { UIPlugin } from '@uppy/core'\nimport type { Uppy, UIPluginOptions } from '@uppy/core'\nimport type { DefinePluginOpts } from '@uppy/core/lib/BasePlugin.js'\nimport type {\n  Body,\n  Meta,\n  MinimalRequiredUppyFile,\n} from '@uppy/utils/lib/UppyFile'\nimport type { PluginTarget } from '@uppy/core/lib/UIPlugin.js'\nimport getFileTypeExtension from '@uppy/utils/lib/getFileTypeExtension'\nimport mimeTypes from '@uppy/utils/lib/mimeTypes'\nimport isMobile from 'is-mobile'\nimport canvasToBlob from '@uppy/utils/lib/canvasToBlob'\nimport supportsMediaRecorder from './supportsMediaRecorder.ts'\nimport CameraIcon from './CameraIcon.tsx'\nimport CameraScreen from './CameraScreen.tsx'\nimport PermissionsScreen from './PermissionsScreen.tsx'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\nimport locale from './locale.ts'\n\n/**\n * Normalize a MIME type or file extension into a MIME type.\n *\n * @param fileType - MIME type or a file extension prefixed with `.`.\n * @returns The MIME type or `undefined` if the fileType is an extension and is not known.\n */\nfunction toMimeType(fileType: string): string | undefined {\n  if (fileType[0] === '.') {\n    return mimeTypes[fileType.slice(1) as keyof typeof mimeTypes]\n  }\n  return fileType\n}\n\n/**\n * Is this MIME type a video?\n */\nfunction isVideoMimeType(mimeType?: string): boolean {\n  return /^video\\/[^*]+$/.test(mimeType!)\n}\n\n/**\n * Is this MIME type an image?\n */\nfunction isImageMimeType(mimeType?: string): boolean {\n  return /^image\\/[^*]+$/.test(mimeType!)\n}\n\nfunction getMediaDevices() {\n  // bug in the compatibility data\n  // eslint-disable-next-line compat/compat\n  return navigator.mediaDevices\n}\n\nfunction isModeAvailable<T>(modes: T[], mode: unknown): mode is T {\n  return modes.includes(mode as T)\n}\n\nexport interface WebcamOptions<M extends Meta, B extends Body>\n  extends UIPluginOptions {\n  target?: PluginTarget<M, B>\n  onBeforeSnapshot?: () => Promise<void>\n  countdown?: number | false\n  modes?: Array<'video-audio' | 'video-only' | 'audio-only' | 'picture'>\n  mirror?: boolean\n  showVideoSourceDropdown?: boolean\n  videoConstraints?: MediaTrackConstraints\n  showRecordingLength?: boolean\n  preferredImageMimeType?: string | null\n  preferredVideoMimeType?: string | null\n  mobileNativeCamera?: boolean\n}\n\ninterface WebcamState {\n  hasCamera: boolean\n  cameraReady: boolean\n  cameraError: null\n  recordingLengthSeconds: number\n  videoSources: MediaDeviceInfo[]\n  currentDeviceId: string | MediaStreamTrack | null | undefined\n  recordedVideo: null | string\n  isRecording: boolean\n  [key: string]: unknown\n}\n\n// set default options\nconst defaultOptions = {\n  onBeforeSnapshot: () => Promise.resolve(),\n  countdown: false,\n  modes: ['video-audio', 'video-only', 'audio-only', 'picture'] as any,\n  mirror: true,\n  showVideoSourceDropdown: false,\n  preferredImageMimeType: null,\n  preferredVideoMimeType: null,\n  showRecordingLength: false,\n  mobileNativeCamera: isMobile({ tablet: true }),\n} satisfies WebcamOptions<any, any>\n\n/**\n * Webcam\n */\nexport default class Webcam<M extends Meta, B extends Body> extends UIPlugin<\n  DefinePluginOpts<WebcamOptions<M, B>, keyof typeof defaultOptions>,\n  M,\n  B,\n  WebcamState\n> {\n  static VERSION = packageJson.version\n\n  // enableMirror is used to toggle mirroring, for instance when discarding the video,\n  // while `opts.mirror` is used to remember the initial user setting\n  #enableMirror\n\n  private mediaDevices\n\n  private supportsUserMedia\n\n  private protocol: 'http' | 'https'\n\n  private capturedMediaFile: MinimalRequiredUppyFile<M, B> | null\n\n  private icon: () => h.JSX.Element\n\n  private webcamActive\n\n  private stream: MediaStream | null = null\n\n  private recorder: MediaRecorder | null = null\n\n  private recordingChunks: Blob[] | null = null\n\n  private recordingLengthTimer?: ReturnType<typeof setInterval>\n\n  private captureInProgress: boolean = false\n\n  constructor(uppy: Uppy<M, B>, opts?: WebcamOptions<M, B>) {\n    super(uppy, { ...defaultOptions, ...opts })\n    this.mediaDevices = getMediaDevices()\n    this.supportsUserMedia = !!this.mediaDevices\n    // eslint-disable-next-line no-restricted-globals\n    this.protocol = location.protocol.match(/https/i) ? 'https' : 'http'\n    this.id = this.opts.id || 'Webcam'\n    this.type = 'acquirer'\n    this.capturedMediaFile = null\n    this.icon = () => (\n      <svg\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        width=\"32\"\n        height=\"32\"\n        viewBox=\"0 0 32 32\"\n      >\n        <path\n          d=\"M23.5 9.5c1.417 0 2.5 1.083 2.5 2.5v9.167c0 1.416-1.083 2.5-2.5 2.5h-15c-1.417 0-2.5-1.084-2.5-2.5V12c0-1.417 1.083-2.5 2.5-2.5h2.917l1.416-2.167C13 7.167 13.25 7 13.5 7h5c.25 0 .5.167.667.333L20.583 9.5H23.5zM16 11.417a4.706 4.706 0 00-4.75 4.75 4.704 4.704 0 004.75 4.75 4.703 4.703 0 004.75-4.75c0-2.663-2.09-4.75-4.75-4.75zm0 7.825c-1.744 0-3.076-1.332-3.076-3.074 0-1.745 1.333-3.077 3.076-3.077 1.744 0 3.074 1.333 3.074 3.076s-1.33 3.075-3.074 3.075z\"\n          fill=\"#02B383\"\n          fillRule=\"nonzero\"\n        />\n      </svg>\n    )\n\n    this.defaultLocale = locale\n\n    this.i18nInit()\n    this.title = this.i18n('pluginNameCamera')\n\n    this.#enableMirror = this.opts.mirror\n\n    this.install = this.install.bind(this)\n    this.setPluginState = this.setPluginState.bind(this)\n    this.render = this.render.bind(this)\n\n    // Camera controls\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.takeSnapshot = this.takeSnapshot.bind(this)\n    this.startRecording = this.startRecording.bind(this)\n    this.stopRecording = this.stopRecording.bind(this)\n    this.discardRecordedVideo = this.discardRecordedVideo.bind(this)\n    this.submit = this.submit.bind(this)\n    this.oneTwoThreeSmile = this.oneTwoThreeSmile.bind(this)\n    this.focus = this.focus.bind(this)\n    this.changeVideoSource = this.changeVideoSource.bind(this)\n\n    this.webcamActive = false\n\n    if (this.opts.countdown) {\n      this.opts.onBeforeSnapshot = this.oneTwoThreeSmile\n    }\n\n    this.setPluginState({\n      hasCamera: false,\n      cameraReady: false,\n      cameraError: null,\n      recordingLengthSeconds: 0,\n      videoSources: [],\n      currentDeviceId: null,\n    })\n  }\n\n  setOptions(newOpts: Partial<WebcamOptions<M, B>>): void {\n    super.setOptions({\n      ...newOpts,\n      videoConstraints: {\n        // May be undefined but ... handles that\n        ...this.opts.videoConstraints,\n        ...newOpts?.videoConstraints,\n      },\n    })\n  }\n\n  hasCameraCheck(): Promise<boolean> {\n    if (!this.mediaDevices) {\n      return Promise.resolve(false)\n    }\n\n    return this.mediaDevices.enumerateDevices().then((devices) => {\n      return devices.some((device) => device.kind === 'videoinput')\n    })\n  }\n\n  isAudioOnly(): boolean {\n    return this.opts.modes.length === 1 && this.opts.modes[0] === 'audio-only'\n  }\n\n  getConstraints(deviceId: string | null = null): {\n    video: false | MediaTrackConstraints\n    audio: boolean\n  } {\n    const acceptsAudio =\n      this.opts.modes.indexOf('video-audio') !== -1 ||\n      this.opts.modes.indexOf('audio-only') !== -1\n    const acceptsVideo =\n      !this.isAudioOnly() &&\n      (this.opts.modes.indexOf('video-audio') !== -1 ||\n        this.opts.modes.indexOf('video-only') !== -1 ||\n        this.opts.modes.indexOf('picture') !== -1)\n\n    const videoConstraints = {\n      ...(this.opts.videoConstraints || {}),\n      ...(deviceId != null && { deviceId }),\n    }\n\n    return {\n      audio: acceptsAudio,\n      video: acceptsVideo ? videoConstraints : false,\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  start(\n    options: {\n      deviceId: string\n    } | null = null,\n  ): Promise<never> | void {\n    if (!this.supportsUserMedia) {\n      return Promise.reject(new Error('Webcam access not supported'))\n    }\n\n    this.webcamActive = true\n\n    if (this.opts.mirror) {\n      this.#enableMirror = true\n    }\n\n    const constraints = this.getConstraints(options?.deviceId)\n\n    // TODO: add a return and/or convert this to async/await\n    this.hasCameraCheck().then((hasCamera) => {\n      this.setPluginState({\n        hasCamera,\n      })\n\n      // ask user for access to their camera\n      return this.mediaDevices\n        .getUserMedia(constraints)\n        .then((stream) => {\n          this.stream = stream\n\n          let currentDeviceId = null\n          const tracks =\n            this.isAudioOnly() ?\n              stream.getAudioTracks()\n            : stream.getVideoTracks()\n\n          if (!options || !options.deviceId) {\n            currentDeviceId = tracks[0].getSettings().deviceId\n          } else {\n            tracks.forEach((track) => {\n              if (track.getSettings().deviceId === options.deviceId) {\n                currentDeviceId = track.getSettings().deviceId\n              }\n            })\n          }\n\n          // Update the sources now, so we can access the names.\n          this.updateVideoSources()\n\n          this.setPluginState({\n            currentDeviceId,\n            cameraReady: true,\n          })\n        })\n        .catch((err) => {\n          this.setPluginState({\n            cameraReady: false,\n            cameraError: err,\n          })\n          this.uppy.info(err.message, 'error')\n        })\n    })\n  }\n\n  getMediaRecorderOptions(): { mimeType?: string } {\n    const options: { mimeType?: string } = {}\n\n    // Try to use the `opts.preferredVideoMimeType` or one of the `allowedFileTypes` for the recording.\n    // If the browser doesn't support it, we'll fall back to the browser default instead.\n    // Safari doesn't have the `isTypeSupported` API.\n    if (MediaRecorder.isTypeSupported) {\n      const { restrictions } = this.uppy.opts\n      let preferredVideoMimeTypes: Array<string | undefined> = []\n      if (this.opts.preferredVideoMimeType) {\n        preferredVideoMimeTypes = [this.opts.preferredVideoMimeType]\n      } else if (restrictions.allowedFileTypes) {\n        preferredVideoMimeTypes = restrictions.allowedFileTypes\n          .map(toMimeType)\n          .filter(isVideoMimeType)\n      }\n\n      const filterSupportedTypes = (candidateType?: string) =>\n        MediaRecorder.isTypeSupported(candidateType!) &&\n        getFileTypeExtension(candidateType!)\n      const acceptableMimeTypes =\n        preferredVideoMimeTypes.filter(filterSupportedTypes)\n\n      if (acceptableMimeTypes.length > 0) {\n        // eslint-disable-next-line prefer-destructuring\n        options.mimeType = acceptableMimeTypes[0]\n      }\n    }\n\n    return options\n  }\n\n  startRecording(): void {\n    // only used if supportsMediaRecorder() returned true\n    // eslint-disable-next-line compat/compat\n    this.recorder = new MediaRecorder(\n      this.stream!,\n      this.getMediaRecorderOptions(),\n    )\n    this.recordingChunks = []\n    let stoppingBecauseOfMaxSize = false\n    this.recorder.addEventListener('dataavailable', (event) => {\n      this.recordingChunks!.push(event.data)\n\n      const { restrictions } = this.uppy.opts\n      if (\n        this.recordingChunks!.length > 1 &&\n        restrictions.maxFileSize != null &&\n        !stoppingBecauseOfMaxSize\n      ) {\n        const totalSize = this.recordingChunks!.reduce(\n          (acc, chunk) => acc + chunk.size,\n          0,\n        )\n        // Exclude the initial chunk from the average size calculation because it is likely to be a very small outlier\n        const averageChunkSize =\n          (totalSize - this.recordingChunks![0].size) /\n          (this.recordingChunks!.length - 1)\n        const expectedEndChunkSize = averageChunkSize * 3\n        const maxSize = Math.max(\n          0,\n          restrictions.maxFileSize - expectedEndChunkSize,\n        )\n\n        if (totalSize > maxSize) {\n          stoppingBecauseOfMaxSize = true\n          this.uppy.info(this.i18n('recordingStoppedMaxSize'), 'warning', 4000)\n          this.stopRecording()\n        }\n      }\n    })\n\n    // use a \"time slice\" of 500ms: ondataavailable will be called each 500ms\n    // smaller time slices mean we can more accurately check the max file size restriction\n    this.recorder.start(500)\n\n    if (this.opts.showRecordingLength) {\n      // Start the recordingLengthTimer if we are showing the recording length.\n      this.recordingLengthTimer = setInterval(() => {\n        const currentRecordingLength =\n          this.getPluginState().recordingLengthSeconds\n        this.setPluginState({\n          recordingLengthSeconds: currentRecordingLength + 1,\n        })\n      }, 1000)\n    }\n\n    this.setPluginState({\n      isRecording: true,\n    })\n  }\n\n  stopRecording(): Promise<void> {\n    const stopped = new Promise<void>((resolve) => {\n      this.recorder!.addEventListener('stop', () => {\n        resolve()\n      })\n      this.recorder!.stop()\n\n      if (this.opts.showRecordingLength) {\n        // Stop the recordingLengthTimer if we are showing the recording length.\n        clearInterval(this.recordingLengthTimer)\n        this.setPluginState({ recordingLengthSeconds: 0 })\n      }\n    })\n\n    return stopped\n      .then(() => {\n        this.setPluginState({\n          isRecording: false,\n        })\n        return this.getVideo()\n      })\n      .then((file) => {\n        try {\n          this.capturedMediaFile = file\n          // create object url for capture result preview\n          this.setPluginState({\n            // eslint-disable-next-line compat/compat\n            recordedVideo: URL.createObjectURL(file.data as Blob),\n          })\n          this.#enableMirror = false\n        } catch (err) {\n          // Logging the error, exept restrictions, which is handled in Core\n          if (!err.isRestriction) {\n            this.uppy.log(err)\n          }\n        }\n      })\n      .then(\n        () => {\n          this.recordingChunks = null\n          this.recorder = null\n        },\n        (error) => {\n          this.recordingChunks = null\n          this.recorder = null\n          throw error\n        },\n      )\n  }\n\n  discardRecordedVideo(): void {\n    this.setPluginState({ recordedVideo: null })\n\n    if (this.opts.mirror) {\n      this.#enableMirror = true\n    }\n\n    this.capturedMediaFile = null\n  }\n\n  submit(): void {\n    try {\n      if (this.capturedMediaFile) {\n        this.uppy.addFile(this.capturedMediaFile)\n      }\n    } catch (err) {\n      // Logging the error, exept restrictions, which is handled in Core\n      if (!err.isRestriction) {\n        this.uppy.log(err, 'error')\n      }\n    }\n  }\n\n  async stop(): Promise<void> {\n    if (this.stream) {\n      const audioTracks = this.stream.getAudioTracks()\n      const videoTracks = this.stream.getVideoTracks()\n\n      audioTracks.concat(videoTracks).forEach((track) => track.stop())\n    }\n\n    if (this.recorder) {\n      await new Promise((resolve) => {\n        this.recorder!.addEventListener('stop', resolve, { once: true })\n        this.recorder!.stop()\n\n        if (this.opts.showRecordingLength) {\n          clearInterval(this.recordingLengthTimer)\n        }\n      })\n    }\n\n    this.recordingChunks = null\n    this.recorder = null\n    this.webcamActive = false\n    this.stream = null\n\n    this.setPluginState({\n      recordedVideo: null,\n      isRecording: false,\n      recordingLengthSeconds: 0,\n    })\n  }\n\n  getVideoElement(): HTMLVideoElement | null {\n    return this.el!.querySelector('.uppy-Webcam-video')\n  }\n\n  oneTwoThreeSmile(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let count = this.opts.countdown\n\n      // eslint-disable-next-line consistent-return\n      const countDown = setInterval(() => {\n        if (!this.webcamActive) {\n          clearInterval(countDown)\n          this.captureInProgress = false\n          return reject(new Error('Webcam is not active'))\n        }\n\n        if (count) {\n          this.uppy.info(`${count}...`, 'warning', 800)\n          count--\n        } else {\n          clearInterval(countDown)\n          this.uppy.info(this.i18n('smile'), 'success', 1500)\n          setTimeout(() => resolve(), 1500)\n        }\n      }, 1000)\n    })\n  }\n\n  takeSnapshot(): void {\n    if (this.captureInProgress) return\n\n    this.captureInProgress = true\n\n    this.opts\n      .onBeforeSnapshot()\n      .catch((err) => {\n        const message = typeof err === 'object' ? err.message : err\n        this.uppy.info(message, 'error', 5000)\n        return Promise.reject(new Error(`onBeforeSnapshot: ${message}`))\n      })\n      .then(() => {\n        return this.getImage()\n      })\n      .then(\n        (tagFile) => {\n          this.captureInProgress = false\n          try {\n            this.uppy.addFile(tagFile)\n          } catch (err) {\n            // Logging the error, except restrictions, which is handled in Core\n            if (!err.isRestriction) {\n              this.uppy.log(err)\n            }\n          }\n        },\n        (error) => {\n          this.captureInProgress = false\n          throw error\n        },\n      )\n  }\n\n  getImage(): Promise<MinimalRequiredUppyFile<M, B>> {\n    const video = this.getVideoElement()\n    if (!video) {\n      return Promise.reject(\n        new Error(\n          'No video element found, likely due to the Webcam tab being closed.',\n        ),\n      )\n    }\n\n    const width = video.videoWidth\n    const height = video.videoHeight\n\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n    const ctx = canvas.getContext('2d')\n    ctx!.drawImage(video, 0, 0)\n\n    const { restrictions } = this.uppy.opts\n    let preferredImageMimeTypes: string[] = []\n    if (this.opts.preferredImageMimeType) {\n      preferredImageMimeTypes = [this.opts.preferredImageMimeType]\n    } else if (restrictions.allowedFileTypes) {\n      preferredImageMimeTypes = restrictions.allowedFileTypes\n        .map(toMimeType)\n        .filter(isImageMimeType) as string[]\n    }\n\n    const mimeType = preferredImageMimeTypes[0] || 'image/jpeg'\n    const ext = getFileTypeExtension(mimeType) || 'jpg'\n    const name = `cam-${Date.now()}.${ext}`\n\n    return canvasToBlob(canvas, mimeType).then((blob) => {\n      return {\n        source: this.id,\n        name,\n        data: new Blob([blob!], { type: mimeType }),\n        type: mimeType,\n      }\n    })\n  }\n\n  getVideo(): Promise<MinimalRequiredUppyFile<M, B>> {\n    // Sometimes in iOS Safari, Blobs (especially the first Blob in the recordingChunks Array)\n    // have empty 'type' attributes (e.g. '') so we need to find a Blob that has a defined 'type'\n    // attribute in order to determine the correct MIME type.\n    const mimeType = this.recordingChunks!.find(\n      (blob) => blob.type?.length > 0,\n    )!.type\n\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(\n        new Error(\n          `Could not retrieve recording: Unsupported media type \"${mimeType}\"`,\n        ),\n      )\n    }\n\n    const name = `webcam-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.recordingChunks!, { type: mimeType })\n    const file = {\n      source: this.id,\n      name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType,\n    }\n\n    return Promise.resolve(file)\n  }\n\n  focus(): void {\n    if (!this.opts.countdown) return\n    setTimeout(() => {\n      this.uppy.info(this.i18n('smile'), 'success', 1500)\n    }, 1000)\n  }\n\n  changeVideoSource(deviceId: string): void {\n    this.stop()\n    this.start({ deviceId })\n  }\n\n  updateVideoSources(): void {\n    this.mediaDevices.enumerateDevices().then((devices) => {\n      this.setPluginState({\n        videoSources: devices.filter((device) => device.kind === 'videoinput'),\n      })\n    })\n  }\n\n  render(): ComponentChild {\n    if (!this.webcamActive) {\n      this.start()\n    }\n\n    const webcamState = this.getPluginState()\n\n    if (!webcamState.cameraReady || !webcamState.hasCamera) {\n      return (\n        <PermissionsScreen\n          icon={CameraIcon}\n          i18n={this.i18n}\n          hasCamera={webcamState.hasCamera}\n        />\n      )\n    }\n\n    return (\n      <CameraScreen\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...webcamState}\n        onChangeVideoSource={this.changeVideoSource}\n        onSnapshot={this.takeSnapshot}\n        onStartRecording={this.startRecording}\n        onStopRecording={this.stopRecording}\n        onDiscardRecordedVideo={this.discardRecordedVideo}\n        onSubmit={this.submit}\n        onFocus={this.focus}\n        onStop={this.stop}\n        i18n={this.i18n}\n        modes={this.opts.modes}\n        showRecordingLength={this.opts.showRecordingLength}\n        showVideoSourceDropdown={this.opts.showVideoSourceDropdown}\n        supportsRecording={supportsMediaRecorder()}\n        recording={webcamState.isRecording}\n        mirror={this.#enableMirror}\n        src={this.stream}\n      />\n    )\n  }\n\n  install(): void {\n    const { mobileNativeCamera, modes, videoConstraints } = this.opts\n\n    const { target } = this.opts\n    if (mobileNativeCamera && target) {\n      this.getTargetPlugin<M, B>(target)?.setOptions({\n        showNativeVideoCameraButton:\n          isModeAvailable(modes, 'video-only') ||\n          isModeAvailable(modes, 'video-audio'),\n        showNativePhotoCameraButton: isModeAvailable(modes, 'picture'),\n        nativeCameraFacingMode: videoConstraints?.facingMode,\n      })\n      return\n    }\n\n    this.setPluginState({\n      cameraReady: false,\n      recordingLengthSeconds: 0,\n    })\n\n    if (target) {\n      this.mount(target, this)\n    }\n\n    if (this.mediaDevices) {\n      this.updateVideoSources()\n\n      this.mediaDevices.ondevicechange = () => {\n        this.updateVideoSources()\n\n        if (this.stream) {\n          let restartStream = true\n\n          const { videoSources, currentDeviceId } = this.getPluginState()\n\n          videoSources.forEach((videoSource) => {\n            if (currentDeviceId === videoSource.deviceId) {\n              restartStream = false\n            }\n          })\n\n          if (restartStream) {\n            this.stop()\n            this.start()\n          }\n        }\n      }\n    }\n  }\n\n  uninstall(): void {\n    this.stop()\n    this.unmount()\n  }\n\n  onUnmount(): void {\n    this.stop()\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,CAAC,QAA6B,QAAQ;AAE/C,SAASC,QAAQ,QAAQ,YAAY;AASrC,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,UAAU,MAAM,iBAAkB;AACzC,OAAOC,YAAY,MAAM,mBAAoB;AAC7C,OAAOC,iBAAiB,MAAM,wBAAyB;AACvD;AACA;AAAA,MACOC,WAAW;EAAA;AAAA;AAClB,OAAOC,MAAM,MAAM,aAAa;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,QAAgB,EAAsB;EACxD,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACvB,OAAOV,SAAS,CAACU,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAA2B;EAC/D;EACA,OAAOD,QAAQ;AACjB;;AAEA;AACA;AACA;AACA,SAASE,eAAeA,CAACC,QAAiB,EAAW;EACnD,OAAO,gBAAgB,CAACC,IAAI,CAACD,QAAS,CAAC;AACzC;;AAEA;AACA;AACA;AACA,SAASE,eAAeA,CAACF,QAAiB,EAAW;EACnD,OAAO,gBAAgB,CAACC,IAAI,CAACD,QAAS,CAAC;AACzC;AAEA,SAASG,eAAeA,CAAA,EAAG;EACzB;EACA;EACA,OAAOC,SAAS,CAACC,YAAY;AAC/B;AAEA,SAASC,eAAeA,CAAIC,KAAU,EAAEC,IAAa,EAAa;EAChE,OAAOD,KAAK,CAACE,QAAQ,CAACD,IAAS,CAAC;AAClC;AA6BA;AACA,MAAME,cAAc,GAAG;EACrBC,gBAAgB,EAAEA,CAAA,KAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;EACzCC,SAAS,EAAE,KAAK;EAChBP,KAAK,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,SAAS,CAAQ;EACpEQ,MAAM,EAAE,IAAI;EACZC,uBAAuB,EAAE,KAAK;EAC9BC,sBAAsB,EAAE,IAAI;EAC5BC,sBAAsB,EAAE,IAAI;EAC5BC,mBAAmB,EAAE,KAAK;EAC1BC,kBAAkB,EAAEhC,QAAQ,CAAC;IAAEiC,MAAM,EAAE;EAAK,CAAC;AAC/C,CAAmC;;AAEnC;AACA;AACA;AAFA,IAAAC,aAAA,gBAAAC,0BAAA;AAGA,eAAe,MAAMC,MAAM,SAAyCvC,QAAQ,CAK1E;EA6BAwC,WAAWA,CAACC,IAAgB,EAAEC,IAA0B,EAAE;IACxD,KAAK,CAACD,IAAI,EAAE;MAAE,GAAGhB,cAAc;MAAE,GAAGiB;IAAK,CAAC,CAAC;IA3B7C;IACA;IAAAC,MAAA,CAAAC,cAAA,OAAAP,aAAA;MAAAQ,QAAA;MAAAC,KAAA;IAAA;IAAA,KAeQC,MAAM,GAAuB,IAAI;IAAA,KAEjCC,QAAQ,GAAyB,IAAI;IAAA,KAErCC,eAAe,GAAkB,IAAI;IAAA,KAIrCC,iBAAiB,GAAY,KAAK;IAIxC,IAAI,CAAC9B,YAAY,GAAGF,eAAe,CAAC,CAAC;IACrC,IAAI,CAACiC,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAAC/B,YAAY;IAC5C;IACA,IAAI,CAACgC,QAAQ,GAAGC,QAAQ,CAACD,QAAQ,CAACE,KAAK,CAAC,QAAQ,CAAC,GAAG,OAAO,GAAG,MAAM;IACpE,IAAI,CAACC,EAAE,GAAG,IAAI,CAACb,IAAI,CAACa,EAAE,IAAI,QAAQ;IAClC,IAAI,CAACC,IAAI,GAAG,UAAU;IACtB,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,IAAI,GAAG,MACV3D,CAAA;MACE,eAAY,MAAM;MAClB4D,SAAS,EAAC,OAAO;MACjBC,KAAK,EAAC,IAAI;MACVC,MAAM,EAAC,IAAI;MACXC,OAAO,EAAC;IAAW,GAEnB/D,CAAA;MACEgE,CAAC,EAAC,2cAA2c;MAC7cC,IAAI,EAAC,SAAS;MACdC,QAAQ,EAAC;IAAS,CACnB,CACE,CACN;IAED,IAAI,CAACC,aAAa,GAAGxD,MAAM;IAE3B,IAAI,CAACyD,QAAQ,CAAC,CAAC;IACf,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,IAAI,CAAC,kBAAkB,CAAC;IAE1CC,2BAAA,KAAI,EAAAjC,aAAA,EAAAA,aAAA,IAAiB,IAAI,CAACK,IAAI,CAACZ,MAAM;IAErC,IAAI,CAACyC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACE,MAAM,GAAG,IAAI,CAACA,MAAM,CAACF,IAAI,CAAC,IAAI,CAAC;;IAEpC;IACA,IAAI,CAACG,KAAK,GAAG,IAAI,CAACA,KAAK,CAACH,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACI,IAAI,GAAG,IAAI,CAACA,IAAI,CAACJ,IAAI,CAAC,IAAI,CAAC;IAChC,IAAI,CAACK,YAAY,GAAG,IAAI,CAACA,YAAY,CAACL,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACM,cAAc,GAAG,IAAI,CAACA,cAAc,CAACN,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACO,aAAa,GAAG,IAAI,CAACA,aAAa,CAACP,IAAI,CAAC,IAAI,CAAC;IAClD,IAAI,CAACQ,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACR,IAAI,CAAC,IAAI,CAAC;IAChE,IAAI,CAACS,MAAM,GAAG,IAAI,CAACA,MAAM,CAACT,IAAI,CAAC,IAAI,CAAC;IACpC,IAAI,CAACU,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACV,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACW,KAAK,GAAG,IAAI,CAACA,KAAK,CAACX,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACY,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACZ,IAAI,CAAC,IAAI,CAAC;IAE1D,IAAI,CAACa,YAAY,GAAG,KAAK;IAEzB,IAAI,IAAI,CAAC3C,IAAI,CAACb,SAAS,EAAE;MACvB,IAAI,CAACa,IAAI,CAAChB,gBAAgB,GAAG,IAAI,CAACwD,gBAAgB;IACpD;IAEA,IAAI,CAACT,cAAc,CAAC;MAClBa,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,KAAK;MAClBC,WAAW,EAAE,IAAI;MACjBC,sBAAsB,EAAE,CAAC;MACzBC,YAAY,EAAE,EAAE;MAChBC,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAACC,OAAqC,EAAQ;IACtD,KAAK,CAACD,UAAU,CAAC;MACf,GAAGC,OAAO;MACVC,gBAAgB,EAAE;QAChB;QACA,GAAG,IAAI,CAACpD,IAAI,CAACoD,gBAAgB;QAC7B,IAAGD,OAAO,oBAAPA,OAAO,CAAEC,gBAAgB;MAC9B;IACF,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA,EAAqB;IACjC,IAAI,CAAC,IAAI,CAAC3E,YAAY,EAAE;MACtB,OAAOO,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;IAC/B;IAEA,OAAO,IAAI,CAACR,YAAY,CAAC4E,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;MAC5D,OAAOA,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,KAAK,YAAY,CAAC;IAC/D,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAAA,EAAY;IACrB,OAAO,IAAI,CAAC5D,IAAI,CAACpB,KAAK,CAACiF,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC7D,IAAI,CAACpB,KAAK,CAAC,CAAC,CAAC,KAAK,YAAY;EAC5E;EAEAkF,cAAcA,CAACC,QAAuB,EAGpC;IAAA,IAHaA,QAAuB;MAAvBA,QAAuB,GAAG,IAAI;IAAA;IAI3C,MAAMC,YAAY,GAChB,IAAI,CAAChE,IAAI,CAACpB,KAAK,CAACqF,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAC7C,IAAI,CAACjE,IAAI,CAACpB,KAAK,CAACqF,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAMC,YAAY,GAChB,CAAC,IAAI,CAACN,WAAW,CAAC,CAAC,KAClB,IAAI,CAAC5D,IAAI,CAACpB,KAAK,CAACqF,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAC5C,IAAI,CAACjE,IAAI,CAACpB,KAAK,CAACqF,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAC5C,IAAI,CAACjE,IAAI,CAACpB,KAAK,CAACqF,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAE9C,MAAMb,gBAAgB,GAAG;MACvB,IAAI,IAAI,CAACpD,IAAI,CAACoD,gBAAgB,IAAI,CAAC,CAAC,CAAC;MACrC,IAAIW,QAAQ,IAAI,IAAI,IAAI;QAAEA;MAAS,CAAC;IACtC,CAAC;IAED,OAAO;MACLI,KAAK,EAAEH,YAAY;MACnBI,KAAK,EAAEF,YAAY,GAAGd,gBAAgB,GAAG;IAC3C,CAAC;EACH;;EAEA;EACAnB,KAAKA,CACHoC,OAEQ,EACe;IAAA,IAAAC,QAAA;IAAA,IAHvBD,OAEQ;MAFRA,OAEQ,GAAG,IAAI;IAAA;IAEf,IAAI,CAAC,IAAI,CAAC5D,iBAAiB,EAAE;MAC3B,OAAOxB,OAAO,CAACsF,MAAM,CAAC,IAAIC,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACjE;IAEA,IAAI,CAAC7B,YAAY,GAAG,IAAI;IAExB,IAAI,IAAI,CAAC3C,IAAI,CAACZ,MAAM,EAAE;MACpBwC,2BAAA,KAAI,EAAAjC,aAAA,EAAAA,aAAA,IAAiB,IAAI;IAC3B;IAEA,MAAM8E,WAAW,GAAG,IAAI,CAACX,cAAc,EAAAQ,QAAA,GAACD,OAAO,qBAAPC,QAAA,CAASP,QAAQ,CAAC;;IAE1D;IACA,IAAI,CAACV,cAAc,CAAC,CAAC,CAACE,IAAI,CAAEX,SAAS,IAAK;MACxC,IAAI,CAACb,cAAc,CAAC;QAClBa;MACF,CAAC,CAAC;;MAEF;MACA,OAAO,IAAI,CAAClE,YAAY,CACrBgG,YAAY,CAACD,WAAW,CAAC,CACzBlB,IAAI,CAAElD,MAAM,IAAK;QAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;QAEpB,IAAI4C,eAAe,GAAG,IAAI;QAC1B,MAAM0B,MAAM,GACV,IAAI,CAACf,WAAW,CAAC,CAAC,GAChBvD,MAAM,CAACuE,cAAc,CAAC,CAAC,GACvBvE,MAAM,CAACwE,cAAc,CAAC,CAAC;QAE3B,IAAI,CAACR,OAAO,IAAI,CAACA,OAAO,CAACN,QAAQ,EAAE;UACjCd,eAAe,GAAG0B,MAAM,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,CAACf,QAAQ;QACpD,CAAC,MAAM;UACLY,MAAM,CAACI,OAAO,CAAEC,KAAK,IAAK;YACxB,IAAIA,KAAK,CAACF,WAAW,CAAC,CAAC,CAACf,QAAQ,KAAKM,OAAO,CAACN,QAAQ,EAAE;cACrDd,eAAe,GAAG+B,KAAK,CAACF,WAAW,CAAC,CAAC,CAACf,QAAQ;YAChD;UACF,CAAC,CAAC;QACJ;;QAEA;QACA,IAAI,CAACkB,kBAAkB,CAAC,CAAC;QAEzB,IAAI,CAAClD,cAAc,CAAC;UAClBkB,eAAe;UACfJ,WAAW,EAAE;QACf,CAAC,CAAC;MACJ,CAAC,CAAC,CACDqC,KAAK,CAAEC,GAAG,IAAK;QACd,IAAI,CAACpD,cAAc,CAAC;UAClBc,WAAW,EAAE,KAAK;UAClBC,WAAW,EAAEqC;QACf,CAAC,CAAC;QACF,IAAI,CAACpF,IAAI,CAACqF,IAAI,CAACD,GAAG,CAACE,OAAO,EAAE,OAAO,CAAC;MACtC,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEAC,uBAAuBA,CAAA,EAA0B;IAC/C,MAAMjB,OAA8B,GAAG,CAAC,CAAC;;IAEzC;IACA;IACA;IACA,IAAIkB,aAAa,CAACC,eAAe,EAAE;MACjC,MAAM;QAAEC;MAAa,CAAC,GAAG,IAAI,CAAC1F,IAAI,CAACC,IAAI;MACvC,IAAI0F,uBAAkD,GAAG,EAAE;MAC3D,IAAI,IAAI,CAAC1F,IAAI,CAACT,sBAAsB,EAAE;QACpCmG,uBAAuB,GAAG,CAAC,IAAI,CAAC1F,IAAI,CAACT,sBAAsB,CAAC;MAC9D,CAAC,MAAM,IAAIkG,YAAY,CAACE,gBAAgB,EAAE;QACxCD,uBAAuB,GAAGD,YAAY,CAACE,gBAAgB,CACpDC,GAAG,CAAC3H,UAAU,CAAC,CACf4H,MAAM,CAACzH,eAAe,CAAC;MAC5B;MAEA,MAAM0H,oBAAoB,GAAIC,aAAsB,IAClDR,aAAa,CAACC,eAAe,CAACO,aAAc,CAAC,IAC7CxI,oBAAoB,CAACwI,aAAc,CAAC;MACtC,MAAMC,mBAAmB,GACvBN,uBAAuB,CAACG,MAAM,CAACC,oBAAoB,CAAC;MAEtD,IAAIE,mBAAmB,CAACnC,MAAM,GAAG,CAAC,EAAE;QAClC;QACAQ,OAAO,CAAChG,QAAQ,GAAG2H,mBAAmB,CAAC,CAAC,CAAC;MAC3C;IACF;IAEA,OAAO3B,OAAO;EAChB;EAEAjC,cAAcA,CAAA,EAAS;IACrB;IACA;IACA,IAAI,CAAC9B,QAAQ,GAAG,IAAIiF,aAAa,CAC/B,IAAI,CAAClF,MAAM,EACX,IAAI,CAACiF,uBAAuB,CAAC,CAC/B,CAAC;IACD,IAAI,CAAC/E,eAAe,GAAG,EAAE;IACzB,IAAI0F,wBAAwB,GAAG,KAAK;IACpC,IAAI,CAAC3F,QAAQ,CAAC4F,gBAAgB,CAAC,eAAe,EAAGC,KAAK,IAAK;MACzD,IAAI,CAAC5F,eAAe,CAAE6F,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;MAEtC,MAAM;QAAEZ;MAAa,CAAC,GAAG,IAAI,CAAC1F,IAAI,CAACC,IAAI;MACvC,IACE,IAAI,CAACO,eAAe,CAAEsD,MAAM,GAAG,CAAC,IAChC4B,YAAY,CAACa,WAAW,IAAI,IAAI,IAChC,CAACL,wBAAwB,EACzB;QACA,MAAMM,SAAS,GAAG,IAAI,CAAChG,eAAe,CAAEiG,MAAM,CAC5C,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,IAAI,EAChC,CACF,CAAC;QACD;QACA,MAAMC,gBAAgB,GACpB,CAACL,SAAS,GAAG,IAAI,CAAChG,eAAe,CAAE,CAAC,CAAC,CAACoG,IAAI,KACzC,IAAI,CAACpG,eAAe,CAAEsD,MAAM,GAAG,CAAC,CAAC;QACpC,MAAMgD,oBAAoB,GAAGD,gBAAgB,GAAG,CAAC;QACjD,MAAME,OAAO,GAAGC,IAAI,CAACC,GAAG,CACtB,CAAC,EACDvB,YAAY,CAACa,WAAW,GAAGO,oBAC7B,CAAC;QAED,IAAIN,SAAS,GAAGO,OAAO,EAAE;UACvBb,wBAAwB,GAAG,IAAI;UAC/B,IAAI,CAAClG,IAAI,CAACqF,IAAI,CAAC,IAAI,CAACzD,IAAI,CAAC,yBAAyB,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC;UACrE,IAAI,CAACU,aAAa,CAAC,CAAC;QACtB;MACF;IACF,CAAC,CAAC;;IAEF;IACA;IACA,IAAI,CAAC/B,QAAQ,CAAC2B,KAAK,CAAC,GAAG,CAAC;IAExB,IAAI,IAAI,CAACjC,IAAI,CAACR,mBAAmB,EAAE;MACjC;MACA,IAAI,CAACyH,oBAAoB,GAAGC,WAAW,CAAC,MAAM;QAC5C,MAAMC,sBAAsB,GAC1B,IAAI,CAACC,cAAc,CAAC,CAAC,CAACrE,sBAAsB;QAC9C,IAAI,CAAChB,cAAc,CAAC;UAClBgB,sBAAsB,EAAEoE,sBAAsB,GAAG;QACnD,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAI,CAACpF,cAAc,CAAC;MAClBsF,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;EAEAhF,aAAaA,CAAA,EAAkB;IAC7B,MAAMiF,OAAO,GAAG,IAAIrI,OAAO,CAAQC,OAAO,IAAK;MAC7C,IAAI,CAACoB,QAAQ,CAAE4F,gBAAgB,CAAC,MAAM,EAAE,MAAM;QAC5ChH,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;MACF,IAAI,CAACoB,QAAQ,CAAE4B,IAAI,CAAC,CAAC;MAErB,IAAI,IAAI,CAAClC,IAAI,CAACR,mBAAmB,EAAE;QACjC;QACA+H,aAAa,CAAC,IAAI,CAACN,oBAAoB,CAAC;QACxC,IAAI,CAAClF,cAAc,CAAC;UAAEgB,sBAAsB,EAAE;QAAE,CAAC,CAAC;MACpD;IACF,CAAC,CAAC;IAEF,OAAOuE,OAAO,CACX/D,IAAI,CAAC,MAAM;MACV,IAAI,CAACxB,cAAc,CAAC;QAClBsF,WAAW,EAAE;MACf,CAAC,CAAC;MACF,OAAO,IAAI,CAACG,QAAQ,CAAC,CAAC;IACxB,CAAC,CAAC,CACDjE,IAAI,CAAEkE,IAAI,IAAK;MACd,IAAI;QACF,IAAI,CAAC1G,iBAAiB,GAAG0G,IAAI;QAC7B;QACA,IAAI,CAAC1F,cAAc,CAAC;UAClB;UACA2F,aAAa,EAAEC,GAAG,CAACC,eAAe,CAACH,IAAI,CAACpB,IAAY;QACtD,CAAC,CAAC;QACFzE,2BAAA,KAAI,EAAAjC,aAAA,EAAAA,aAAA,IAAiB,KAAK;MAC5B,CAAC,CAAC,OAAOwF,GAAG,EAAE;QACZ;QACA,IAAI,CAACA,GAAG,CAAC0C,aAAa,EAAE;UACtB,IAAI,CAAC9H,IAAI,CAAC+H,GAAG,CAAC3C,GAAG,CAAC;QACpB;MACF;IACF,CAAC,CAAC,CACD5B,IAAI,CACH,MAAM;MACJ,IAAI,CAAChD,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACD,QAAQ,GAAG,IAAI;IACtB,CAAC,EACAyH,KAAK,IAAK;MACT,IAAI,CAACxH,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACD,QAAQ,GAAG,IAAI;MACpB,MAAMyH,KAAK;IACb,CACF,CAAC;EACL;EAEAzF,oBAAoBA,CAAA,EAAS;IAC3B,IAAI,CAACP,cAAc,CAAC;MAAE2F,aAAa,EAAE;IAAK,CAAC,CAAC;IAE5C,IAAI,IAAI,CAAC1H,IAAI,CAACZ,MAAM,EAAE;MACpBwC,2BAAA,KAAI,EAAAjC,aAAA,EAAAA,aAAA,IAAiB,IAAI;IAC3B;IAEA,IAAI,CAACoB,iBAAiB,GAAG,IAAI;EAC/B;EAEAwB,MAAMA,CAAA,EAAS;IACb,IAAI;MACF,IAAI,IAAI,CAACxB,iBAAiB,EAAE;QAC1B,IAAI,CAAChB,IAAI,CAACiI,OAAO,CAAC,IAAI,CAACjH,iBAAiB,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOoE,GAAG,EAAE;MACZ;MACA,IAAI,CAACA,GAAG,CAAC0C,aAAa,EAAE;QACtB,IAAI,CAAC9H,IAAI,CAAC+H,GAAG,CAAC3C,GAAG,EAAE,OAAO,CAAC;MAC7B;IACF;EACF;EAEA,MAAMjD,IAAIA,CAAA,EAAkB;IAC1B,IAAI,IAAI,CAAC7B,MAAM,EAAE;MACf,MAAM4H,WAAW,GAAG,IAAI,CAAC5H,MAAM,CAACuE,cAAc,CAAC,CAAC;MAChD,MAAMsD,WAAW,GAAG,IAAI,CAAC7H,MAAM,CAACwE,cAAc,CAAC,CAAC;MAEhDoD,WAAW,CAACE,MAAM,CAACD,WAAW,CAAC,CAACnD,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAAC9C,IAAI,CAAC,CAAC,CAAC;IAClE;IAEA,IAAI,IAAI,CAAC5B,QAAQ,EAAE;MACjB,MAAM,IAAIrB,OAAO,CAAEC,OAAO,IAAK;QAC7B,IAAI,CAACoB,QAAQ,CAAE4F,gBAAgB,CAAC,MAAM,EAAEhH,OAAO,EAAE;UAAEkJ,IAAI,EAAE;QAAK,CAAC,CAAC;QAChE,IAAI,CAAC9H,QAAQ,CAAE4B,IAAI,CAAC,CAAC;QAErB,IAAI,IAAI,CAAClC,IAAI,CAACR,mBAAmB,EAAE;UACjC+H,aAAa,CAAC,IAAI,CAACN,oBAAoB,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ;IAEA,IAAI,CAAC1G,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACD,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACqC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACtC,MAAM,GAAG,IAAI;IAElB,IAAI,CAAC0B,cAAc,CAAC;MAClB2F,aAAa,EAAE,IAAI;MACnBL,WAAW,EAAE,KAAK;MAClBtE,sBAAsB,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEAsF,eAAeA,CAAA,EAA4B;IACzC,OAAO,IAAI,CAACC,EAAE,CAAEC,aAAa,CAAC,oBAAoB,CAAC;EACrD;EAEA/F,gBAAgBA,CAAA,EAAkB;IAChC,OAAO,IAAIvD,OAAO,CAAC,CAACC,OAAO,EAAEqF,MAAM,KAAK;MACtC,IAAIiE,KAAK,GAAG,IAAI,CAACxI,IAAI,CAACb,SAAS;;MAE/B;MACA,MAAMsJ,SAAS,GAAGvB,WAAW,CAAC,MAAM;QAClC,IAAI,CAAC,IAAI,CAACvE,YAAY,EAAE;UACtB4E,aAAa,CAACkB,SAAS,CAAC;UACxB,IAAI,CAACjI,iBAAiB,GAAG,KAAK;UAC9B,OAAO+D,MAAM,CAAC,IAAIC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAClD;QAEA,IAAIgE,KAAK,EAAE;UACT,IAAI,CAACzI,IAAI,CAACqF,IAAI,CAAC,GAAGoD,KAAK,KAAK,EAAE,SAAS,EAAE,GAAG,CAAC;UAC7CA,KAAK,EAAE;QACT,CAAC,MAAM;UACLjB,aAAa,CAACkB,SAAS,CAAC;UACxB,IAAI,CAAC1I,IAAI,CAACqF,IAAI,CAAC,IAAI,CAACzD,IAAI,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC;UACnD+G,UAAU,CAAC,MAAMxJ,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC;QACnC;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ;EAEAiD,YAAYA,CAAA,EAAS;IACnB,IAAI,IAAI,CAAC3B,iBAAiB,EAAE;IAE5B,IAAI,CAACA,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACR,IAAI,CACNhB,gBAAgB,CAAC,CAAC,CAClBkG,KAAK,CAAEC,GAAG,IAAK;MACd,MAAME,OAAO,GAAG,OAAOF,GAAG,KAAK,QAAQ,GAAGA,GAAG,CAACE,OAAO,GAAGF,GAAG;MAC3D,IAAI,CAACpF,IAAI,CAACqF,IAAI,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC;MACtC,OAAOpG,OAAO,CAACsF,MAAM,CAAC,IAAIC,KAAK,CAAC,qBAAqBa,OAAO,EAAE,CAAC,CAAC;IAClE,CAAC,CAAC,CACD9B,IAAI,CAAC,MAAM;MACV,OAAO,IAAI,CAACoF,QAAQ,CAAC,CAAC;IACxB,CAAC,CAAC,CACDpF,IAAI,CACFqF,OAAO,IAAK;MACX,IAAI,CAACpI,iBAAiB,GAAG,KAAK;MAC9B,IAAI;QACF,IAAI,CAACT,IAAI,CAACiI,OAAO,CAACY,OAAO,CAAC;MAC5B,CAAC,CAAC,OAAOzD,GAAG,EAAE;QACZ;QACA,IAAI,CAACA,GAAG,CAAC0C,aAAa,EAAE;UACtB,IAAI,CAAC9H,IAAI,CAAC+H,GAAG,CAAC3C,GAAG,CAAC;QACpB;MACF;IACF,CAAC,EACA4C,KAAK,IAAK;MACT,IAAI,CAACvH,iBAAiB,GAAG,KAAK;MAC9B,MAAMuH,KAAK;IACb,CACF,CAAC;EACL;EAEAY,QAAQA,CAAA,EAA2C;IACjD,MAAMvE,KAAK,GAAG,IAAI,CAACiE,eAAe,CAAC,CAAC;IACpC,IAAI,CAACjE,KAAK,EAAE;MACV,OAAOnF,OAAO,CAACsF,MAAM,CACnB,IAAIC,KAAK,CACP,oEACF,CACF,CAAC;IACH;IAEA,MAAMtD,KAAK,GAAGkD,KAAK,CAACyE,UAAU;IAC9B,MAAM1H,MAAM,GAAGiD,KAAK,CAAC0E,WAAW;IAEhC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAAC7H,KAAK,GAAGA,KAAK;IACpB6H,MAAM,CAAC5H,MAAM,GAAGA,MAAM;IACtB,MAAM+H,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAAEE,SAAS,CAAChF,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAE3B,MAAM;MAAEqB;IAAa,CAAC,GAAG,IAAI,CAAC1F,IAAI,CAACC,IAAI;IACvC,IAAIqJ,uBAAiC,GAAG,EAAE;IAC1C,IAAI,IAAI,CAACrJ,IAAI,CAACV,sBAAsB,EAAE;MACpC+J,uBAAuB,GAAG,CAAC,IAAI,CAACrJ,IAAI,CAACV,sBAAsB,CAAC;IAC9D,CAAC,MAAM,IAAImG,YAAY,CAACE,gBAAgB,EAAE;MACxC0D,uBAAuB,GAAG5D,YAAY,CAACE,gBAAgB,CACpDC,GAAG,CAAC3H,UAAU,CAAC,CACf4H,MAAM,CAACtH,eAAe,CAAa;IACxC;IAEA,MAAMF,QAAQ,GAAGgL,uBAAuB,CAAC,CAAC,CAAC,IAAI,YAAY;IAC3D,MAAMC,GAAG,GAAG/L,oBAAoB,CAACc,QAAQ,CAAC,IAAI,KAAK;IACnD,MAAMkL,IAAI,GAAG,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIH,GAAG,EAAE;IAEvC,OAAO5L,YAAY,CAACqL,MAAM,EAAE1K,QAAQ,CAAC,CAACkF,IAAI,CAAEmG,IAAI,IAAK;MACnD,OAAO;QACLC,MAAM,EAAE,IAAI,CAAC9I,EAAE;QACf0I,IAAI;QACJlD,IAAI,EAAE,IAAIuD,IAAI,CAAC,CAACF,IAAI,CAAE,EAAE;UAAE5I,IAAI,EAAEzC;QAAS,CAAC,CAAC;QAC3CyC,IAAI,EAAEzC;MACR,CAAC;IACH,CAAC,CAAC;EACJ;EAEAmJ,QAAQA,CAAA,EAA2C;IACjD;IACA;IACA;IACA,MAAMnJ,QAAQ,GAAG,IAAI,CAACkC,eAAe,CAAEsJ,IAAI,CACxCH,IAAI;MAAA,IAAAI,UAAA;MAAA,OAAK,EAAAA,UAAA,GAAAJ,IAAI,CAAC5I,IAAI,qBAATgJ,UAAA,CAAWjG,MAAM,IAAG,CAAC;IAAA,CACjC,CAAC,CAAE/C,IAAI;IAEP,MAAMiJ,aAAa,GAAGxM,oBAAoB,CAACc,QAAQ,CAAC;IAEpD,IAAI,CAAC0L,aAAa,EAAE;MAClB,OAAO9K,OAAO,CAACsF,MAAM,CACnB,IAAIC,KAAK,CACP,yDAAyDnG,QAAQ,GACnE,CACF,CAAC;IACH;IAEA,MAAMkL,IAAI,GAAG,UAAUC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIM,aAAa,EAAE;IACpD,MAAML,IAAI,GAAG,IAAIE,IAAI,CAAC,IAAI,CAACrJ,eAAe,EAAG;MAAEO,IAAI,EAAEzC;IAAS,CAAC,CAAC;IAChE,MAAMoJ,IAAI,GAAG;MACXkC,MAAM,EAAE,IAAI,CAAC9I,EAAE;MACf0I,IAAI;MACJlD,IAAI,EAAE,IAAIuD,IAAI,CAAC,CAACF,IAAI,CAAC,EAAE;QAAE5I,IAAI,EAAEzC;MAAS,CAAC,CAAC;MAC1CyC,IAAI,EAAEzC;IACR,CAAC;IAED,OAAOY,OAAO,CAACC,OAAO,CAACuI,IAAI,CAAC;EAC9B;EAEAhF,KAAKA,CAAA,EAAS;IACZ,IAAI,CAAC,IAAI,CAACzC,IAAI,CAACb,SAAS,EAAE;IAC1BuJ,UAAU,CAAC,MAAM;MACf,IAAI,CAAC3I,IAAI,CAACqF,IAAI,CAAC,IAAI,CAACzD,IAAI,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC;IACrD,CAAC,EAAE,IAAI,CAAC;EACV;EAEAe,iBAAiBA,CAACqB,QAAgB,EAAQ;IACxC,IAAI,CAAC7B,IAAI,CAAC,CAAC;IACX,IAAI,CAACD,KAAK,CAAC;MAAE8B;IAAS,CAAC,CAAC;EAC1B;EAEAkB,kBAAkBA,CAAA,EAAS;IACzB,IAAI,CAACvG,YAAY,CAAC4E,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;MACrD,IAAI,CAACzB,cAAc,CAAC;QAClBiB,YAAY,EAAEQ,OAAO,CAACqC,MAAM,CAAEnC,MAAM,IAAKA,MAAM,CAACC,IAAI,KAAK,YAAY;MACvE,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA3B,MAAMA,CAAA,EAAmB;IACvB,IAAI,CAAC,IAAI,CAACW,YAAY,EAAE;MACtB,IAAI,CAACV,KAAK,CAAC,CAAC;IACd;IAEA,MAAM+H,WAAW,GAAG,IAAI,CAAC5C,cAAc,CAAC,CAAC;IAEzC,IAAI,CAAC4C,WAAW,CAACnH,WAAW,IAAI,CAACmH,WAAW,CAACpH,SAAS,EAAE;MACtD,OACEvF,CAAA,CAACS,iBAAiB;QAChBkD,IAAI,EAAEpD,UAAW;QACjB+D,IAAI,EAAE,IAAI,CAACA,IAAK;QAChBiB,SAAS,EAAEoH,WAAW,CAACpH;MAAU,CAClC,CAAC;IAEN;IAEA,OACEvF,CAAA,CAACQ;IACC;IAAA,EAAAoM,QAAA,KACID,WAAW;MACfE,mBAAmB,EAAE,IAAI,CAACxH,iBAAkB;MAC5CyH,UAAU,EAAE,IAAI,CAAChI,YAAa;MAC9BiI,gBAAgB,EAAE,IAAI,CAAChI,cAAe;MACtCiI,eAAe,EAAE,IAAI,CAAChI,aAAc;MACpCiI,sBAAsB,EAAE,IAAI,CAAChI,oBAAqB;MAClDiI,QAAQ,EAAE,IAAI,CAAChI,MAAO;MACtBiI,OAAO,EAAE,IAAI,CAAC/H,KAAM;MACpBgI,MAAM,EAAE,IAAI,CAACvI,IAAK;MAClBP,IAAI,EAAE,IAAI,CAACA,IAAK;MAChB/C,KAAK,EAAE,IAAI,CAACoB,IAAI,CAACpB,KAAM;MACvBY,mBAAmB,EAAE,IAAI,CAACQ,IAAI,CAACR,mBAAoB;MACnDH,uBAAuB,EAAE,IAAI,CAACW,IAAI,CAACX,uBAAwB;MAC3DqL,iBAAiB,EAAE/M,qBAAqB,CAAC,CAAE;MAC3CgN,SAAS,EAAEX,WAAW,CAAC3C,WAAY;MACnCjI,MAAM,EAAAwC,2BAAA,CAAE,IAAI,EAAAjC,aAAA,EAAAA,aAAA,CAAe;MAC3BiL,GAAG,EAAE,IAAI,CAACvK;IAAO,EAClB,CAAC;EAEN;EAEAwB,OAAOA,CAAA,EAAS;IACd,MAAM;MAAEpC,kBAAkB;MAAEb,KAAK;MAAEwE;IAAiB,CAAC,GAAG,IAAI,CAACpD,IAAI;IAEjE,MAAM;MAAE6K;IAAO,CAAC,GAAG,IAAI,CAAC7K,IAAI;IAC5B,IAAIP,kBAAkB,IAAIoL,MAAM,EAAE;MAAA,IAAAC,qBAAA;MAChC,CAAAA,qBAAA,OAAI,CAACC,eAAe,CAAOF,MAAM,CAAC,aAAlCC,qBAAA,CAAoC5H,UAAU,CAAC;QAC7C8H,2BAA2B,EACzBrM,eAAe,CAACC,KAAK,EAAE,YAAY,CAAC,IACpCD,eAAe,CAACC,KAAK,EAAE,aAAa,CAAC;QACvCqM,2BAA2B,EAAEtM,eAAe,CAACC,KAAK,EAAE,SAAS,CAAC;QAC9DsM,sBAAsB,EAAE9H,gBAAgB,oBAAhBA,gBAAgB,CAAE+H;MAC5C,CAAC,CAAC;MACF;IACF;IAEA,IAAI,CAACpJ,cAAc,CAAC;MAClBc,WAAW,EAAE,KAAK;MAClBE,sBAAsB,EAAE;IAC1B,CAAC,CAAC;IAEF,IAAI8H,MAAM,EAAE;MACV,IAAI,CAACO,KAAK,CAACP,MAAM,EAAE,IAAI,CAAC;IAC1B;IAEA,IAAI,IAAI,CAACnM,YAAY,EAAE;MACrB,IAAI,CAACuG,kBAAkB,CAAC,CAAC;MAEzB,IAAI,CAACvG,YAAY,CAAC2M,cAAc,GAAG,MAAM;QACvC,IAAI,CAACpG,kBAAkB,CAAC,CAAC;QAEzB,IAAI,IAAI,CAAC5E,MAAM,EAAE;UACf,IAAIiL,aAAa,GAAG,IAAI;UAExB,MAAM;YAAEtI,YAAY;YAAEC;UAAgB,CAAC,GAAG,IAAI,CAACmE,cAAc,CAAC,CAAC;UAE/DpE,YAAY,CAAC+B,OAAO,CAAEwG,WAAW,IAAK;YACpC,IAAItI,eAAe,KAAKsI,WAAW,CAACxH,QAAQ,EAAE;cAC5CuH,aAAa,GAAG,KAAK;YACvB;UACF,CAAC,CAAC;UAEF,IAAIA,aAAa,EAAE;YACjB,IAAI,CAACpJ,IAAI,CAAC,CAAC;YACX,IAAI,CAACD,KAAK,CAAC,CAAC;UACd;QACF;MACF,CAAC;IACH;EACF;EAEAuJ,SAASA,CAAA,EAAS;IAChB,IAAI,CAACtJ,IAAI,CAAC,CAAC;IACX,IAAI,CAACuJ,OAAO,CAAC,CAAC;EAChB;EAEAC,SAASA,CAAA,EAAS;IAChB,IAAI,CAACxJ,IAAI,CAAC,CAAC;EACb;AACF;AArpBqBrC,MAAM,CAMlB8L,OAAO,GAAG5N,WAAW,CAAC6N,OAAO","ignoreList":[]}
{"version":3,"names":["h","UIPlugin","getFileTypeExtension","supportsMediaRecorder","RecordingScreen","PermissionsScreen","locale","packageJson","_recordingLengthTimer","_classPrivateFieldLooseKey","_stream","_audioActive","_recordingChunks","_recorder","_capturedMediaFile","_mediaDevices","_supportsUserMedia","_hasAudioCheck","_start","_startRecording","_stopRecording","_discardRecordedAudio","_submit","_stop","_getAudio","_changeSource","_updateSources","Audio","constructor","uppy","opts","Object","defineProperty","value","_getAudio2","_hasAudioCheck2","writable","options","_classPrivateFieldLooseBase","Promise","reject","Error","then","hasAudio","setPluginState","getUserMedia","audio","stream","currentDeviceId","tracks","getAudioTracks","deviceId","getSettings","findLast","track","audioReady","catch","err","cameraError","info","message","MediaRecorder","stoppingBecauseOfMaxSize","addEventListener","event","push","data","restrictions","length","maxFileSize","totalSize","reduce","acc","chunk","size","averageChunkSize","expectedEndChunkSize","maxSize","Math","max","i18n","start","setInterval","currentRecordingLength","getPluginState","recordingLengthSeconds","isRecording","stopped","resolve","stop","clearInterval","file","recordedAudio","URL","createObjectURL","isRestriction","log","error","addFile","audioTracks","forEach","once","enumerateDevices","devices","audioSources","filter","device","kind","navigator","mediaDevices","id","type","icon","className","focusable","width","height","viewBox","d","fill","defaultLocale","i18nInit","title","render","audioState","_extends","onChangeSource","onStartRecording","onStopRecording","onDiscardRecordedAudio","onSubmit","onStop","showAudioSourceDropdown","supportsRecording","recording","install","target","mount","ondevicechange","restartStream","audioSource","uninstall","unmount","some","mimeType","find","blob","_blob$type","fileExtension","name","Date","now","Blob","source","VERSION","version"],"sources":["Audio.tsx"],"sourcesContent":["import { h } from 'preact'\n\nimport { UIPlugin, type UIPluginOptions } from '@uppy/core'\nimport type {\n  Body,\n  Meta,\n  MinimalRequiredUppyFile,\n} from '@uppy/utils/lib/UppyFile'\nimport type { Uppy } from '@uppy/core/lib/Uppy.js'\n\nimport getFileTypeExtension from '@uppy/utils/lib/getFileTypeExtension'\nimport supportsMediaRecorder from './supportsMediaRecorder.ts'\nimport RecordingScreen from './RecordingScreen.tsx'\nimport PermissionsScreen from './PermissionsScreen.tsx'\nimport locale from './locale.ts'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\n\nexport interface AudioOptions extends UIPluginOptions {\n  showAudioSourceDropdown?: boolean\n}\ninterface AudioState {\n  audioReady: boolean\n  recordingLengthSeconds: number\n  recordedAudio: string | null | undefined\n  hasAudio: boolean\n  cameraError: null\n  audioSources: MediaDeviceInfo[]\n  currentDeviceId: string | MediaStreamTrack | null | undefined\n  isRecording: boolean\n  showAudioSourceDropdown: boolean\n  [id: string]: unknown\n}\n\n/**\n * Audio recording plugin\n */\nexport default class Audio<M extends Meta, B extends Body> extends UIPlugin<\n  AudioOptions,\n  M,\n  B,\n  AudioState\n> {\n  static VERSION = packageJson.version\n\n  #recordingLengthTimer?: ReturnType<typeof setInterval>\n\n  private icon\n\n  #stream: MediaStream | null = null\n\n  #audioActive = false\n\n  #recordingChunks: Blob[] | null = null\n\n  #recorder: MediaRecorder | null = null\n\n  #capturedMediaFile: MinimalRequiredUppyFile<M, B> | null = null\n\n  #mediaDevices\n\n  #supportsUserMedia\n\n  constructor(uppy: Uppy<M, B>, opts?: AudioOptions) {\n    super(uppy, opts)\n    this.#mediaDevices = navigator.mediaDevices\n    this.#supportsUserMedia = this.#mediaDevices != null\n    this.id = this.opts.id || 'Audio'\n    this.type = 'acquirer'\n    this.icon = () => (\n      <svg\n        className=\"uppy-DashboardTab-iconAudio\"\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        width=\"32px\"\n        height=\"32px\"\n        viewBox=\"0 0 32 32\"\n      >\n        <path\n          d=\"M21.143 12.297c.473 0 .857.383.857.857v2.572c0 3.016-2.24 5.513-5.143 5.931v2.64h2.572a.857.857 0 110 1.714H12.57a.857.857 0 110-1.714h2.572v-2.64C12.24 21.24 10 18.742 10 15.726v-2.572a.857.857 0 111.714 0v2.572A4.29 4.29 0 0016 20.01a4.29 4.29 0 004.286-4.285v-2.572c0-.474.384-.857.857-.857zM16 6.5a3 3 0 013 3v6a3 3 0 01-6 0v-6a3 3 0 013-3z\"\n          fill=\"currentcolor\"\n          fill-rule=\"nonzero\"\n        />\n      </svg>\n    )\n\n    this.defaultLocale = locale\n\n    this.opts = { ...opts }\n\n    this.i18nInit()\n    this.title = this.i18n('pluginNameAudio')\n\n    this.setPluginState({\n      hasAudio: false,\n      audioReady: false,\n      cameraError: null,\n      recordingLengthSeconds: 0,\n      audioSources: [],\n      currentDeviceId: null,\n    })\n  }\n\n  #hasAudioCheck(): Promise<boolean> {\n    if (!this.#mediaDevices) {\n      return Promise.resolve(false)\n    }\n\n    return this.#mediaDevices.enumerateDevices().then((devices) => {\n      return devices.some((device) => device.kind === 'audioinput')\n    })\n  }\n\n  // eslint-disable-next-line consistent-return\n  #start = (options?: { deviceId?: string }): Promise<never> | void => {\n    if (!this.#supportsUserMedia) {\n      return Promise.reject(new Error('Microphone access not supported'))\n    }\n\n    this.#audioActive = true\n\n    this.#hasAudioCheck().then((hasAudio) => {\n      this.setPluginState({\n        hasAudio,\n      })\n\n      // ask user for access to their camera\n      return this.#mediaDevices\n        .getUserMedia({ audio: true })\n        .then((stream) => {\n          this.#stream = stream\n\n          let currentDeviceId: AudioState['currentDeviceId'] = null\n          const tracks = stream.getAudioTracks()\n\n          if (!options?.deviceId) {\n            currentDeviceId = tracks[0].getSettings().deviceId\n          } else {\n            currentDeviceId = tracks.findLast((track) => {\n              return track.getSettings().deviceId === options.deviceId\n            })\n          }\n\n          // Update the sources now, so we can access the names.\n          this.#updateSources()\n\n          this.setPluginState({\n            currentDeviceId,\n            audioReady: true,\n          })\n        })\n        .catch((err) => {\n          this.setPluginState({\n            audioReady: false,\n            cameraError: err,\n          })\n          this.uppy.info(err.message, 'error')\n        })\n    })\n  }\n\n  #startRecording = (): void => {\n    // only used if supportsMediaRecorder() returned true\n    // eslint-disable-next-line compat/compat\n    this.#recorder = new MediaRecorder(this.#stream!)\n    this.#recordingChunks = []\n    let stoppingBecauseOfMaxSize = false\n    this.#recorder.addEventListener('dataavailable', (event) => {\n      this.#recordingChunks!.push(event.data)\n\n      const { restrictions } = this.uppy.opts\n      if (\n        this.#recordingChunks!.length > 1 &&\n        restrictions.maxFileSize != null &&\n        !stoppingBecauseOfMaxSize\n      ) {\n        const totalSize = this.#recordingChunks!.reduce(\n          (acc, chunk) => acc + chunk.size,\n          0,\n        )\n        // Exclude the initial chunk from the average size calculation because it is likely to be a very small outlier\n        const averageChunkSize =\n          (totalSize - this.#recordingChunks![0].size) /\n          (this.#recordingChunks!.length - 1)\n        const expectedEndChunkSize = averageChunkSize * 3\n        const maxSize = Math.max(\n          0,\n          restrictions.maxFileSize - expectedEndChunkSize,\n        )\n\n        if (totalSize > maxSize) {\n          stoppingBecauseOfMaxSize = true\n          this.uppy.info(this.i18n('recordingStoppedMaxSize'), 'warning', 4000)\n          this.#stopRecording()\n        }\n      }\n    })\n\n    // use a \"time slice\" of 500ms: ondataavailable will be called each 500ms\n    // smaller time slices mean we can more accurately check the max file size restriction\n    this.#recorder.start(500)\n\n    // Start the recordingLengthTimer if we are showing the recording length.\n    this.#recordingLengthTimer = setInterval(() => {\n      const currentRecordingLength = this.getPluginState()\n        .recordingLengthSeconds as number\n      this.setPluginState({\n        recordingLengthSeconds: currentRecordingLength + 1,\n      })\n    }, 1000)\n\n    this.setPluginState({\n      isRecording: true,\n    })\n  }\n\n  #stopRecording = (): Promise<void> => {\n    const stopped = new Promise<void>((resolve) => {\n      this.#recorder!.addEventListener('stop', () => {\n        resolve()\n      })\n      this.#recorder!.stop()\n\n      clearInterval(this.#recordingLengthTimer)\n      this.setPluginState({ recordingLengthSeconds: 0 })\n    })\n\n    return stopped\n      .then(() => {\n        this.setPluginState({\n          isRecording: false,\n        })\n        return this.#getAudio()\n      })\n      .then((file) => {\n        try {\n          this.#capturedMediaFile = file\n          // create object url for capture result preview\n          this.setPluginState({\n            recordedAudio: URL.createObjectURL(file.data),\n          })\n        } catch (err) {\n          // Logging the error, exept restrictions, which is handled in Core\n          if (!err.isRestriction) {\n            this.uppy.log(err)\n          }\n        }\n      })\n      .then(\n        () => {\n          this.#recordingChunks = null\n          this.#recorder = null\n        },\n        (error) => {\n          this.#recordingChunks = null\n          this.#recorder = null\n          throw error\n        },\n      )\n  }\n\n  #discardRecordedAudio = () => {\n    this.setPluginState({ recordedAudio: null })\n    this.#capturedMediaFile = null\n  }\n\n  #submit = () => {\n    try {\n      if (this.#capturedMediaFile) {\n        this.uppy.addFile(this.#capturedMediaFile)\n      }\n    } catch (err) {\n      // Logging the error, exept restrictions, which is handled in Core\n      if (!err.isRestriction) {\n        this.uppy.log(err, 'warning')\n      }\n    }\n  }\n\n  #stop = async () => {\n    if (this.#stream) {\n      const audioTracks = this.#stream.getAudioTracks()\n      audioTracks.forEach((track) => track.stop())\n    }\n\n    if (this.#recorder) {\n      await new Promise((resolve) => {\n        this.#recorder!.addEventListener('stop', resolve, { once: true })\n        this.#recorder!.stop()\n\n        clearInterval(this.#recordingLengthTimer)\n      })\n    }\n\n    this.#recordingChunks = null\n    this.#recorder = null\n    this.#audioActive = false\n    this.#stream = null\n\n    this.setPluginState({\n      recordedAudio: null,\n      isRecording: false,\n      recordingLengthSeconds: 0,\n    })\n  }\n\n  #getAudio() {\n    // Sometimes in iOS Safari, Blobs (especially the first Blob in the recordingChunks Array)\n    // have empty 'type' attributes (e.g. '') so we need to find a Blob that has a defined 'type'\n    // attribute in order to determine the correct MIME type.\n    const mimeType = this.#recordingChunks!.find(\n      (blob) => blob.type?.length > 0,\n    )!.type\n\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(\n        new Error(\n          `Could not retrieve recording: Unsupported media type \"${mimeType}\"`,\n        ),\n      )\n    }\n\n    const name = `audio-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.#recordingChunks!, { type: mimeType })\n    const file = {\n      source: this.id,\n      name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType,\n    }\n\n    return Promise.resolve(file)\n  }\n\n  #changeSource = (deviceId?: string): void => {\n    this.#stop()\n    this.#start({ deviceId })\n  }\n\n  #updateSources = () => {\n    this.#mediaDevices.enumerateDevices().then((devices) => {\n      this.setPluginState({\n        audioSources: devices.filter((device) => device.kind === 'audioinput'),\n      })\n    })\n  }\n\n  render() {\n    if (!this.#audioActive) {\n      this.#start()\n    }\n\n    const audioState = this.getPluginState()\n\n    if (!audioState.audioReady || !audioState.hasAudio) {\n      return (\n        <PermissionsScreen\n          icon={this.icon}\n          i18n={this.i18n}\n          hasAudio={audioState.hasAudio}\n        />\n      )\n    }\n\n    return (\n      <RecordingScreen\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...audioState}\n        onChangeSource={this.#changeSource}\n        onStartRecording={this.#startRecording}\n        onStopRecording={this.#stopRecording}\n        onDiscardRecordedAudio={this.#discardRecordedAudio}\n        onSubmit={this.#submit}\n        onStop={this.#stop}\n        i18n={this.i18n}\n        showAudioSourceDropdown={this.opts.showAudioSourceDropdown}\n        supportsRecording={supportsMediaRecorder()}\n        recording={audioState.isRecording}\n        stream={this.#stream}\n      />\n    )\n  }\n\n  install(): void {\n    this.setPluginState({\n      audioReady: false,\n      recordingLengthSeconds: 0,\n    })\n\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n\n    if (this.#mediaDevices) {\n      this.#updateSources()\n\n      this.#mediaDevices.ondevicechange = () => {\n        this.#updateSources()\n\n        if (this.#stream) {\n          let restartStream = true\n\n          const { audioSources, currentDeviceId } = this.getPluginState()\n\n          audioSources.forEach((audioSource) => {\n            if (currentDeviceId === audioSource.deviceId) {\n              restartStream = false\n            }\n          })\n\n          if (restartStream) {\n            this.#stop()\n            this.#start()\n          }\n        }\n      }\n    }\n  }\n\n  uninstall(): void {\n    if (this.#stream) {\n      this.#stop()\n    }\n\n    this.unmount()\n  }\n}\n"],"mappings":"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","ignoreList":[]}
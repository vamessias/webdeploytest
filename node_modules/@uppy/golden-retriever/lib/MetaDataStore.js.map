{"version":3,"names":["findUppyInstances","instances","i","localStorage","length","key","startsWith","push","slice","maybeParse","str","JSON","parse","cleanedUp","MetaDataStore","constructor","opts","expires","name","storeName","cleanup","load","savedState","getItem","data","metadata","save","Date","now","state","stringify","setItem","instanceID","removeItem","instanceIDs","forEach","id","obj"],"sources":["MetaDataStore.ts"],"sourcesContent":["import type { State as UppyState } from '@uppy/core'\nimport type { Meta, Body } from '@uppy/utils/lib/UppyFile'\n\nexport type StoredState<M extends Meta, B extends Body> = {\n  expires: number\n  metadata: {\n    currentUploads: UppyState<M, B>['currentUploads']\n    files: UppyState<M, B>['files']\n    pluginData: Record<string, unknown>\n  }\n}\n\n/**\n * Get uppy instance IDs for which state is stored.\n */\nfunction findUppyInstances(): string[] {\n  const instances: string[] = []\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith('uppyState:')) {\n      instances.push(key.slice('uppyState:'.length))\n    }\n  }\n  return instances\n}\n\n/**\n * Try to JSON-parse a string, return null on failure.\n */\nfunction maybeParse<M extends Meta, B extends Body>(\n  str: string,\n): StoredState<M, B> | null {\n  try {\n    return JSON.parse(str)\n  } catch {\n    return null\n  }\n}\n\ntype MetaDataStoreOptions = {\n  storeName: string\n  expires?: number\n}\n\nlet cleanedUp = false\nexport default class MetaDataStore<M extends Meta, B extends Body> {\n  opts: Required<MetaDataStoreOptions>\n\n  name: string\n\n  constructor(opts: MetaDataStoreOptions) {\n    this.opts = {\n      expires: 24 * 60 * 60 * 1000, // 24 hours\n      ...opts,\n    }\n    this.name = `uppyState:${opts.storeName}`\n\n    if (!cleanedUp) {\n      cleanedUp = true\n      MetaDataStore.cleanup()\n    }\n  }\n\n  /**\n   *\n   */\n  load(): StoredState<M, B>['metadata'] | null {\n    const savedState = localStorage.getItem(this.name)\n    if (!savedState) return null\n    const data = maybeParse<M, B>(savedState)\n    if (!data) return null\n\n    return data.metadata\n  }\n\n  save(metadata: Record<string, unknown>): void {\n    const expires = Date.now() + this.opts.expires\n    const state = JSON.stringify({\n      metadata,\n      expires,\n    })\n    localStorage.setItem(this.name, state)\n  }\n\n  /**\n   * Remove all expired state.\n   */\n  static cleanup(instanceID?: string): void {\n    if (instanceID) {\n      localStorage.removeItem(`uppyState:${instanceID}`)\n      return\n    }\n\n    const instanceIDs = findUppyInstances()\n    const now = Date.now()\n    instanceIDs.forEach((id) => {\n      const data = localStorage.getItem(`uppyState:${id}`)\n      if (!data) return\n      const obj = maybeParse(data)\n      if (!obj) return\n\n      if (obj.expires && obj.expires < now) {\n        localStorage.removeItem(`uppyState:${id}`)\n      }\n    })\n  }\n}\n"],"mappings":"AAYA;AACA;AACA;AACA,SAASA,iBAAiBA,CAAA,EAAa;EACrC,MAAMC,SAAmB,GAAG,EAAE;EAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,YAAY,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC5C,MAAMG,GAAG,GAAGF,YAAY,CAACE,GAAG,CAACH,CAAC,CAAC;IAC/B,IAAIG,GAAG,YAAHA,GAAG,CAAEC,UAAU,CAAC,YAAY,CAAC,EAAE;MACjCL,SAAS,CAACM,IAAI,CAACF,GAAG,CAACG,KAAK,CAAC,YAAY,CAACJ,MAAM,CAAC,CAAC;IAChD;EACF;EACA,OAAOH,SAAS;AAClB;;AAEA;AACA;AACA;AACA,SAASQ,UAAUA,CACjBC,GAAW,EACe;EAC1B,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC;EACxB,CAAC,CAAC,MAAM;IACN,OAAO,IAAI;EACb;AACF;AAOA,IAAIG,SAAS,GAAG,KAAK;AACrB,eAAe,MAAMC,aAAa,CAAiC;EAKjEC,WAAWA,CAACC,IAA0B,EAAE;IACtC,IAAI,CAACA,IAAI,GAAG;MACVC,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;MAAE;MAC9B,GAAGD;IACL,CAAC;IACD,IAAI,CAACE,IAAI,GAAG,aAAaF,IAAI,CAACG,SAAS,EAAE;IAEzC,IAAI,CAACN,SAAS,EAAE;MACdA,SAAS,GAAG,IAAI;MAChBC,aAAa,CAACM,OAAO,CAAC,CAAC;IACzB;EACF;;EAEA;AACF;AACA;EACEC,IAAIA,CAAA,EAAyC;IAC3C,MAAMC,UAAU,GAAGnB,YAAY,CAACoB,OAAO,CAAC,IAAI,CAACL,IAAI,CAAC;IAClD,IAAI,CAACI,UAAU,EAAE,OAAO,IAAI;IAC5B,MAAME,IAAI,GAAGf,UAAU,CAAOa,UAAU,CAAC;IACzC,IAAI,CAACE,IAAI,EAAE,OAAO,IAAI;IAEtB,OAAOA,IAAI,CAACC,QAAQ;EACtB;EAEAC,IAAIA,CAACD,QAAiC,EAAQ;IAC5C,MAAMR,OAAO,GAAGU,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACZ,IAAI,CAACC,OAAO;IAC9C,MAAMY,KAAK,GAAGlB,IAAI,CAACmB,SAAS,CAAC;MAC3BL,QAAQ;MACRR;IACF,CAAC,CAAC;IACFd,YAAY,CAAC4B,OAAO,CAAC,IAAI,CAACb,IAAI,EAAEW,KAAK,CAAC;EACxC;;EAEA;AACF;AACA;EACE,OAAOT,OAAOA,CAACY,UAAmB,EAAQ;IACxC,IAAIA,UAAU,EAAE;MACd7B,YAAY,CAAC8B,UAAU,CAAC,aAAaD,UAAU,EAAE,CAAC;MAClD;IACF;IAEA,MAAME,WAAW,GAAGlC,iBAAiB,CAAC,CAAC;IACvC,MAAM4B,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtBM,WAAW,CAACC,OAAO,CAAEC,EAAE,IAAK;MAC1B,MAAMZ,IAAI,GAAGrB,YAAY,CAACoB,OAAO,CAAC,aAAaa,EAAE,EAAE,CAAC;MACpD,IAAI,CAACZ,IAAI,EAAE;MACX,MAAMa,GAAG,GAAG5B,UAAU,CAACe,IAAI,CAAC;MAC5B,IAAI,CAACa,GAAG,EAAE;MAEV,IAAIA,GAAG,CAACpB,OAAO,IAAIoB,GAAG,CAACpB,OAAO,GAAGW,GAAG,EAAE;QACpCzB,YAAY,CAAC8B,UAAU,CAAC,aAAaG,EAAE,EAAE,CAAC;MAC5C;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]}